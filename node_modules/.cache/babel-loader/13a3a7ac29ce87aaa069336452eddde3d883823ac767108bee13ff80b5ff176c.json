{"ast":null,"code":"var _jsxFileName = \"D:\\\\polleditor-server\\\\poll-editor\\\\src\\\\context\\\\PollContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollContext = /*#__PURE__*/createContext();\nexport const usePollContext = () => {\n  _s();\n  const context = useContext(PollContext);\n  if (!context) {\n    throw new Error('usePollContext must be used within a PollProvider');\n  }\n  return context;\n};\n_s(usePollContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const PollProvider = ({\n  children\n}) => {\n  _s2();\n  const [settings, setSettings] = useState(() => {\n    try {\n      const saved = localStorage.getItem('app_settings');\n      if (saved) {\n        const parsed = JSON.parse(saved);\n        return {\n          showResults: true,\n          theme: parsed.theme === 'dark' ? 'dark' : 'light',\n          autoSave: true,\n          liveMode: false,\n          showRichText: false,\n          displayMode: 'editor',\n          ...parsed\n        };\n      }\n    } catch {}\n    return {\n      showResults: true,\n      theme: 'light',\n      autoSave: true,\n      liveMode: false,\n      showRichText: false,\n      displayMode: 'editor' // 'editor' | 'viewer' | 'presentation'\n    };\n  });\n  const updateSettings = newSettings => {\n    setSettings(prev => {\n      const next = {\n        ...prev,\n        ...newSettings\n      };\n      try {\n        localStorage.setItem('app_settings', JSON.stringify(next));\n      } catch {}\n      return next;\n    });\n  };\n  const toggleSetting = key => {\n    setSettings(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n  const value = {\n    settings,\n    updateSettings,\n    toggleSetting\n  };\n  return /*#__PURE__*/_jsxDEV(PollContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s2(PollProvider, \"edEBchFAvl9BbKe5BFeYx7VEsYY=\");\n_c = PollProvider;\nvar _c;\n$RefreshReg$(_c, \"PollProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","PollContext","usePollContext","_s","context","Error","PollProvider","children","_s2","settings","setSettings","saved","localStorage","getItem","parsed","JSON","parse","showResults","theme","autoSave","liveMode","showRichText","displayMode","updateSettings","newSettings","prev","next","setItem","stringify","toggleSetting","key","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/polleditor-server/poll-editor/src/context/PollContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst PollContext = createContext();\r\n\r\nexport const usePollContext = () => {\r\n  const context = useContext(PollContext);\r\n  if (!context) {\r\n    throw new Error('usePollContext must be used within a PollProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const PollProvider = ({ children }) => {\r\n  const [settings, setSettings] = useState(() => {\r\n    try {\r\n      const saved = localStorage.getItem('app_settings');\r\n      if (saved) {\r\n        const parsed = JSON.parse(saved);\r\n        return {\r\n          showResults: true,\r\n          theme: parsed.theme === 'dark' ? 'dark' : 'light',\r\n          autoSave: true,\r\n          liveMode: false,\r\n          showRichText: false,\r\n          displayMode: 'editor',\r\n          ...parsed,\r\n        };\r\n      }\r\n    } catch {}\r\n    return {\r\n      showResults: true,\r\n      theme: 'light',\r\n      autoSave: true,\r\n      liveMode: false,\r\n      showRichText: false,\r\n      displayMode: 'editor', // 'editor' | 'viewer' | 'presentation'\r\n    };\r\n  });\r\n\r\n  const updateSettings = (newSettings) => {\r\n    setSettings(prev => {\r\n      const next = { ...prev, ...newSettings };\r\n      try { localStorage.setItem('app_settings', JSON.stringify(next)); } catch {}\r\n      return next;\r\n    });\r\n  };\r\n\r\n  const toggleSetting = (key) => {\r\n    setSettings(prev => ({ ...prev, [key]: !prev[key] }));\r\n  };\r\n\r\n  const value = {\r\n    settings,\r\n    updateSettings,\r\n    toggleSetting,\r\n  };\r\n\r\n  return (\r\n    <PollContext.Provider value={value}>\r\n      {children}\r\n    </PollContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGP,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,cAAc;AAQ3B,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IAC7C,IAAI;MACF,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,IAAIF,KAAK,EAAE;QACT,MAAMG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC;QAChC,OAAO;UACLM,WAAW,EAAE,IAAI;UACjBC,KAAK,EAAEJ,MAAM,CAACI,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,OAAO;UACjDC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE,KAAK;UACfC,YAAY,EAAE,KAAK;UACnBC,WAAW,EAAE,QAAQ;UACrB,GAAGR;QACL,CAAC;MACH;IACF,CAAC,CAAC,MAAM,CAAC;IACT,OAAO;MACLG,WAAW,EAAE,IAAI;MACjBC,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,KAAK;MACfC,YAAY,EAAE,KAAK;MACnBC,WAAW,EAAE,QAAQ,CAAE;IACzB,CAAC;EACH,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAIC,WAAW,IAAK;IACtCd,WAAW,CAACe,IAAI,IAAI;MAClB,MAAMC,IAAI,GAAG;QAAE,GAAGD,IAAI;QAAE,GAAGD;MAAY,CAAC;MACxC,IAAI;QAAEZ,YAAY,CAACe,OAAO,CAAC,cAAc,EAAEZ,IAAI,CAACa,SAAS,CAACF,IAAI,CAAC,CAAC;MAAE,CAAC,CAAC,MAAM,CAAC;MAC3E,OAAOA,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,aAAa,GAAIC,GAAG,IAAK;IAC7BpB,WAAW,CAACe,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACK,GAAG,GAAG,CAACL,IAAI,CAACK,GAAG;IAAE,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAMC,KAAK,GAAG;IACZtB,QAAQ;IACRc,cAAc;IACdM;EACF,CAAC;EAED,oBACE7B,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAxB,QAAA,EAChCA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,GAAA,CAlDWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}