{"ast":null,"code":"var _jsxFileName = \"D:\\\\server\\\\poll-editor\\\\src\\\\components\\\\PollViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { usePollContext } from '../context/PollContext';\nimport { votePoll, incrementVoteOptimistic } from '../redux/pollsSlice';\nimport socketService from '../socket/socket';\nimport './PollViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollViewer = ({\n  polls,\n  selectedPoll,\n  onPollSelect,\n  presentationMode = false\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    settings\n  } = usePollContext();\n  const {\n    currentPoll\n  } = useSelector(state => state.polls);\n  const [votedPolls, setVotedPolls] = useState(new Set());\n  const [localVotes, setLocalVotes] = useState({});\n  const [votingInProgress, setVotingInProgress] = useState(new Set());\n\n  // Persist vote state locally to prevent multi-voting across reloads\n  useEffect(() => {\n    try {\n      const storedVoted = JSON.parse(localStorage.getItem('votedPolls') || '[]');\n      const storedVotes = JSON.parse(localStorage.getItem('localVotes') || '{}');\n      if (Array.isArray(storedVoted)) {\n        setVotedPolls(new Set(storedVoted));\n      }\n      if (storedVotes && typeof storedVotes === 'object') {\n        setLocalVotes(storedVotes);\n      }\n    } catch (_) {\n      // ignore corrupted storage\n    }\n  }, []);\n  useEffect(() => {\n    try {\n      localStorage.setItem('votedPolls', JSON.stringify(Array.from(votedPolls)));\n    } catch (_) {}\n  }, [votedPolls]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('localVotes', JSON.stringify(localVotes));\n    } catch (_) {}\n  }, [localVotes]);\n\n  // Always derive the active poll fresh from the Redux store by id so updates reflect immediately\n  const activePoll = useMemo(() => {\n    const selectedId = (selectedPoll === null || selectedPoll === void 0 ? void 0 : selectedPoll._id) || (currentPoll === null || currentPoll === void 0 ? void 0 : currentPoll._id);\n    if (!selectedId) return null;\n    return polls.find(p => p._id === selectedId) || null;\n  }, [polls, selectedPoll, currentPoll]);\n  useEffect(() => {\n    // Listen for vote updates from WebSocket\n    socketService.onVoteUpdate(({\n      pollId,\n      updatedPoll\n    }) => {\n      if (updatedPoll) {\n        dispatch({\n          type: 'polls/updatePollInStore',\n          payload: updatedPoll\n        });\n      }\n    });\n    return () => {\n      socketService.off('vote_update');\n    };\n  }, [dispatch]);\n  const extractPlainFromMaybeJson = str => {\n    if (!str) return '';\n    const trimmed = String(str).trim();\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\n      try {\n        var _json$root;\n        const json = JSON.parse(trimmed);\n        const children = (json === null || json === void 0 ? void 0 : (_json$root = json.root) === null || _json$root === void 0 ? void 0 : _json$root.children) || [];\n        const text = children.map(node => Array.isArray(node.children) ? node.children.map(c => c.text || '').join('') : '').join(' ').trim();\n        return text || 'Untitled Poll';\n      } catch (_) {\n        return 'Untitled Poll';\n      }\n    }\n    return trimmed || 'Untitled Poll';\n  };\n  const convertLexicalToHtml = str => {\n    if (!str) return '';\n    const trimmed = String(str).trim();\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\n      try {\n        var _json$root2;\n        const json = JSON.parse(trimmed);\n        const children = (json === null || json === void 0 ? void 0 : (_json$root2 = json.root) === null || _json$root2 === void 0 ? void 0 : _json$root2.children) || [];\n        return children.map(node => {\n          if (node.type === 'paragraph') {\n            const textContent = Array.isArray(node.children) ? node.children.map(child => {\n              let text = child.text || '';\n              if (child.format && child.format > 0) {\n                // Apply Lexical formatting\n                if (child.format & 1) text = `<strong>${text}</strong>`; // bold\n                if (child.format & 2) text = `<em>${text}</em>`; // italic\n                if (child.format & 8) text = `<u>${text}</u>`; // underline\n              }\n              return text;\n            }).join('') : '';\n            return `<p>${textContent}</p>`;\n          }\n          return '';\n        }).join('');\n      } catch (_) {\n        return `<p>${trimmed}</p>`;\n      }\n    }\n    return `<p>${trimmed}</p>`;\n  };\n  const renderQuestion = poll => {\n    // Always try to show rich text if available\n    if (poll.questionHtml) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-question-content\",\n        dangerouslySetInnerHTML: {\n          __html: poll.questionHtml\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 14\n      }, this);\n    } else if (poll.question) {\n      const richHtml = convertLexicalToHtml(poll.question);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-question-content\",\n        dangerouslySetInnerHTML: {\n          __html: richHtml\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-question-content\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Untitled Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 12\n    }, this);\n  };\n  const renderOptionText = option => {\n    // Check if option has HTML content\n    if (option.html) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: option.html\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 14\n      }, this);\n    } else if (option.text) {\n      // Try to convert if it's Lexical JSON\n      const richHtml = convertLexicalToHtml(option.text);\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: richHtml\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: option.text || 'Option'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }, this);\n  };\n  const handleVote = async (pollId, optionId) => {\n    // Check if user has already voted on this poll\n    if (votedPolls.has(pollId)) {\n      console.log('User has already voted on this poll');\n      return;\n    }\n\n    // Check if voting is currently in progress for this poll\n    if (votingInProgress.has(pollId)) {\n      console.log('Voting already in progress for this poll');\n      return;\n    }\n\n    // Mark voting as in progress\n    setVotingInProgress(prev => new Set([...prev, pollId]));\n    try {\n      // Mark as voted immediately and record selection\n      setVotedPolls(prev => new Set([...prev, pollId]));\n      setLocalVotes(prev => ({\n        ...prev,\n        [pollId]: optionId\n      }));\n\n      // Optimistic UI update\n      dispatch(incrementVoteOptimistic({\n        pollId,\n        optionId\n      }));\n\n      // Send vote to server\n      const result = await dispatch(votePoll({\n        pollId,\n        optionId\n      })).unwrap();\n\n      // Broadcast vote via WebSocket\n      socketService.broadcastVote(pollId, optionId, result);\n      console.log('Vote submitted successfully');\n    } catch (error) {\n      console.error('Vote failed:', error);\n\n      // Revert optimistic updates on failure\n      setVotedPolls(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(pollId);\n        return newSet;\n      });\n      setLocalVotes(prev => {\n        const newVotes = {\n          ...prev\n        };\n        delete newVotes[pollId];\n        return newVotes;\n      });\n\n      // You might want to show an error message to the user here\n    } finally {\n      // Remove from voting in progress\n      setVotingInProgress(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(pollId);\n        return newSet;\n      });\n    }\n  };\n  const calculatePercentage = (votes, totalVotes) => {\n    if (totalVotes === 0) return 0;\n    return Math.round(votes / totalVotes * 100);\n  };\n  const renderPoll = poll => {\n    const hasVoted = votedPolls.has(poll._id);\n    const userVote = localVotes[poll._id];\n    const isVotingInProgress = votingInProgress.has(poll._id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-question\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: renderQuestion(poll)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-status\",\n            children: poll.isActive ? 'ðŸŸ¢ Active' : 'ðŸ”´ Inactive'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-votes\",\n            children: [poll.totalVotes, \" vote\", poll.totalVotes !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-options\",\n        children: poll.options.map(option => {\n          const percentage = calculatePercentage(option.votes, poll.totalVotes);\n          const isUserVote = userVote === option._id;\n          const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\n          const canVote = !hasVoted && !isVotingInProgress && poll.isActive;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''} ${!canVote ? 'disabled' : ''} ${isVotingInProgress ? 'voting' : ''}`,\n            onClick: () => canVote && handleVote(poll._id, option._id),\n            style: {\n              cursor: canVote ? 'pointer' : 'default'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-text\",\n                children: renderOptionText(option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), (hasVoted || settings.liveMode) && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"vote-count\",\n                  children: option.votes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"percentage\",\n                  children: [percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), (hasVoted || settings.liveMode) && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vote-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-fill\",\n                style: {\n                  width: `${percentage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), isUserVote && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-vote-indicator\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), isVotingInProgress && !hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"voting-indicator\",\n              children: \"Voting...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this)]\n          }, option._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-feedback\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thanks for voting! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), isVotingInProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voting-progress\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Submitting your vote...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, poll._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  };\n  if (presentationMode) {\n    // Full-screen presentation mode\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer presentation-mode\",\n      children: activePoll ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-content\",\n        children: renderPoll(activePoll)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a poll to start the presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Poll Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) || '',\n          onChange: e => {\n            const poll = polls.find(p => p._id === e.target.value);\n            onPollSelect(poll);\n          },\n          className: \"poll-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a poll...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: poll._id,\n            children: extractPlainFromMaybeJson(poll.question)\n          }, poll._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-content\",\n      children: activePoll ? renderPoll(activePoll) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-poll-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a poll from the dropdown above to start voting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), polls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list-mini\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-poll-list\",\n        children: polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mini-poll-item ${(activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) === poll._id ? 'active' : ''}`,\n          onClick: () => onPollSelect(poll),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-title\",\n            children: extractPlainFromMaybeJson(poll.question)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-votes\",\n            children: [poll.totalVotes, \" votes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this)]\n        }, poll._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(PollViewer, \"jsBURCY3PYOV+FypQ+y9ttPGdkg=\", false, function () {\n  return [useDispatch, usePollContext, useSelector];\n});\n_c = PollViewer;\nexport default PollViewer;\nvar _c;\n$RefreshReg$(_c, \"PollViewer\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","useDispatch","useSelector","usePollContext","votePoll","incrementVoteOptimistic","socketService","jsxDEV","_jsxDEV","PollViewer","polls","selectedPoll","onPollSelect","presentationMode","_s","dispatch","settings","currentPoll","state","votedPolls","setVotedPolls","Set","localVotes","setLocalVotes","votingInProgress","setVotingInProgress","storedVoted","JSON","parse","localStorage","getItem","storedVotes","Array","isArray","_","setItem","stringify","from","activePoll","selectedId","_id","find","p","onVoteUpdate","pollId","updatedPoll","type","payload","off","extractPlainFromMaybeJson","str","trimmed","String","trim","startsWith","includes","_json$root","json","children","root","text","map","node","c","join","convertLexicalToHtml","_json$root2","textContent","child","format","renderQuestion","poll","questionHtml","className","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","question","richHtml","renderOptionText","option","html","handleVote","optionId","has","console","log","prev","result","unwrap","broadcastVote","error","newSet","delete","newVotes","calculatePercentage","votes","totalVotes","Math","round","renderPoll","hasVoted","userVote","isVotingInProgress","isActive","options","percentage","isUserVote","isWinning","max","o","canVote","onClick","style","cursor","liveMode","showResults","width","value","onChange","e","target","length","_c","$RefreshReg$"],"sources":["D:/server/poll-editor/src/components/PollViewer.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { usePollContext } from '../context/PollContext';\r\nimport { votePoll, incrementVoteOptimistic } from '../redux/pollsSlice';\r\nimport socketService from '../socket/socket';\r\nimport './PollViewer.css';\r\n\r\nconst PollViewer = ({ polls, selectedPoll, onPollSelect, presentationMode = false }) => {\r\n  const dispatch = useDispatch();\r\n  const { settings } = usePollContext();\r\n  const { currentPoll } = useSelector(state => state.polls);\r\n  \r\n  const [votedPolls, setVotedPolls] = useState(new Set());\r\n  const [localVotes, setLocalVotes] = useState({});\r\n  const [votingInProgress, setVotingInProgress] = useState(new Set());\r\n\r\n  // Persist vote state locally to prevent multi-voting across reloads\r\n  useEffect(() => {\r\n    try {\r\n      const storedVoted = JSON.parse(localStorage.getItem('votedPolls') || '[]');\r\n      const storedVotes = JSON.parse(localStorage.getItem('localVotes') || '{}');\r\n      if (Array.isArray(storedVoted)) {\r\n        setVotedPolls(new Set(storedVoted));\r\n      }\r\n      if (storedVotes && typeof storedVotes === 'object') {\r\n        setLocalVotes(storedVotes);\r\n      }\r\n    } catch (_) {\r\n      // ignore corrupted storage\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('votedPolls', JSON.stringify(Array.from(votedPolls)));\r\n    } catch (_) {}\r\n  }, [votedPolls]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('localVotes', JSON.stringify(localVotes));\r\n    } catch (_) {}\r\n  }, [localVotes]);\r\n\r\n  // Always derive the active poll fresh from the Redux store by id so updates reflect immediately\r\n  const activePoll = useMemo(() => {\r\n    const selectedId = selectedPoll?._id || currentPoll?._id;\r\n    if (!selectedId) return null;\r\n    return polls.find(p => p._id === selectedId) || null;\r\n  }, [polls, selectedPoll, currentPoll]);\r\n\r\n  useEffect(() => {\r\n    // Listen for vote updates from WebSocket\r\n    socketService.onVoteUpdate(({ pollId, updatedPoll }) => {\r\n      if (updatedPoll) {\r\n        dispatch({ type: 'polls/updatePollInStore', payload: updatedPoll });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socketService.off('vote_update');\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const extractPlainFromMaybeJson = (str) => {\r\n    if (!str) return '';\r\n    const trimmed = String(str).trim();\r\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\r\n      try {\r\n        const json = JSON.parse(trimmed);\r\n        const children = json?.root?.children || [];\r\n        const text = children\r\n          .map((node) => Array.isArray(node.children) ? node.children.map((c) => c.text || '').join('') : '')\r\n          .join(' ')\r\n          .trim();\r\n        return text || 'Untitled Poll';\r\n      } catch (_) {\r\n        return 'Untitled Poll';\r\n      }\r\n    }\r\n    return trimmed || 'Untitled Poll';\r\n  };\r\n\r\n  const convertLexicalToHtml = (str) => {\r\n    if (!str) return '';\r\n    const trimmed = String(str).trim();\r\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\r\n      try {\r\n        const json = JSON.parse(trimmed);\r\n        const children = json?.root?.children || [];\r\n        return children\r\n          .map((node) => {\r\n            if (node.type === 'paragraph') {\r\n              const textContent = Array.isArray(node.children) \r\n                ? node.children.map((child) => {\r\n                    let text = child.text || '';\r\n                    if (child.format && child.format > 0) {\r\n                      // Apply Lexical formatting\r\n                      if (child.format & 1) text = `<strong>${text}</strong>`; // bold\r\n                      if (child.format & 2) text = `<em>${text}</em>`; // italic\r\n                      if (child.format & 8) text = `<u>${text}</u>`; // underline\r\n                    }\r\n                    return text;\r\n                  }).join('')\r\n                : '';\r\n              return `<p>${textContent}</p>`;\r\n            }\r\n            return '';\r\n          })\r\n          .join('');\r\n      } catch (_) {\r\n        return `<p>${trimmed}</p>`;\r\n      }\r\n    }\r\n    return `<p>${trimmed}</p>`;\r\n  };\r\n\r\n  const renderQuestion = (poll) => {\r\n    // Always try to show rich text if available\r\n    if (poll.questionHtml) {\r\n      return <div className=\"poll-question-content\" dangerouslySetInnerHTML={{ __html: poll.questionHtml }} />;\r\n    } else if (poll.question) {\r\n      const richHtml = convertLexicalToHtml(poll.question);\r\n      return <div className=\"poll-question-content\" dangerouslySetInnerHTML={{ __html: richHtml }} />;\r\n    }\r\n    return <div className=\"poll-question-content\"><p>Untitled Poll</p></div>;\r\n  };\r\n\r\n  const renderOptionText = (option) => {\r\n    // Check if option has HTML content\r\n    if (option.html) {\r\n      return <span dangerouslySetInnerHTML={{ __html: option.html }} />;\r\n    } else if (option.text) {\r\n      // Try to convert if it's Lexical JSON\r\n      const richHtml = convertLexicalToHtml(option.text);\r\n      return <span dangerouslySetInnerHTML={{ __html: richHtml }} />;\r\n    }\r\n    return <span>{option.text || 'Option'}</span>;\r\n  };\r\n\r\n  const handleVote = async (pollId, optionId) => {\r\n    // Check if user has already voted on this poll\r\n    if (votedPolls.has(pollId)) {\r\n      console.log('User has already voted on this poll');\r\n      return;\r\n    }\r\n\r\n    // Check if voting is currently in progress for this poll\r\n    if (votingInProgress.has(pollId)) {\r\n      console.log('Voting already in progress for this poll');\r\n      return;\r\n    }\r\n\r\n    // Mark voting as in progress\r\n    setVotingInProgress(prev => new Set([...prev, pollId]));\r\n\r\n    try {\r\n      // Mark as voted immediately and record selection\r\n      setVotedPolls(prev => new Set([...prev, pollId]));\r\n      setLocalVotes(prev => ({ ...prev, [pollId]: optionId }));\r\n\r\n      // Optimistic UI update\r\n      dispatch(incrementVoteOptimistic({ pollId, optionId }));\r\n\r\n      // Send vote to server\r\n      const result = await dispatch(votePoll({ pollId, optionId })).unwrap();\r\n      \r\n      // Broadcast vote via WebSocket\r\n      socketService.broadcastVote(pollId, optionId, result);\r\n\r\n      console.log('Vote submitted successfully');\r\n    } catch (error) {\r\n      console.error('Vote failed:', error);\r\n      \r\n      // Revert optimistic updates on failure\r\n      setVotedPolls(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(pollId);\r\n        return newSet;\r\n      });\r\n      setLocalVotes(prev => {\r\n        const newVotes = { ...prev };\r\n        delete newVotes[pollId];\r\n        return newVotes;\r\n      });\r\n      \r\n      // You might want to show an error message to the user here\r\n    } finally {\r\n      // Remove from voting in progress\r\n      setVotingInProgress(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(pollId);\r\n        return newSet;\r\n      });\r\n    }\r\n  };\r\n\r\n  const calculatePercentage = (votes, totalVotes) => {\r\n    if (totalVotes === 0) return 0;\r\n    return Math.round((votes / totalVotes) * 100);\r\n  };\r\n\r\n  const renderPoll = (poll) => {\r\n    const hasVoted = votedPolls.has(poll._id);\r\n    const userVote = localVotes[poll._id];\r\n    const isVotingInProgress = votingInProgress.has(poll._id);\r\n\r\n    return (\r\n      <div key={poll._id} className=\"poll-viewer-card\">\r\n        <div className=\"poll-question\">\r\n          <h2>{renderQuestion(poll)}</h2>\r\n          <div className=\"poll-meta\">\r\n            <span className=\"poll-status\">\r\n              {poll.isActive ? 'ðŸŸ¢ Active' : 'ðŸ”´ Inactive'}\r\n            </span>\r\n            <span className=\"poll-votes\">\r\n              {poll.totalVotes} vote{poll.totalVotes !== 1 ? 's' : ''}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"poll-options\">\r\n          {poll.options.map((option) => {\r\n            const percentage = calculatePercentage(option.votes, poll.totalVotes);\r\n            const isUserVote = userVote === option._id;\r\n            const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\r\n            const canVote = !hasVoted && !isVotingInProgress && poll.isActive;\r\n\r\n            return (\r\n              <div\r\n                key={option._id}\r\n                className={`poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''} ${!canVote ? 'disabled' : ''} ${isVotingInProgress ? 'voting' : ''}`}\r\n                onClick={() => canVote && handleVote(poll._id, option._id)}\r\n                style={{ cursor: canVote ? 'pointer' : 'default' }}\r\n              >\r\n                <div className=\"option-content\">\r\n                  <div className=\"option-text\">\r\n                    {renderOptionText(option)}\r\n                  </div>\r\n                  {(hasVoted || settings.liveMode) && settings.showResults && (\r\n                    <div className=\"option-stats\">\r\n                      <span className=\"vote-count\">{option.votes}</span>\r\n                      <span className=\"percentage\">{percentage}%</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {(hasVoted || settings.liveMode) && settings.showResults && (\r\n                  <div className=\"vote-bar\">\r\n                    <div \r\n                      className=\"vote-fill\"\r\n                      style={{ width: `${percentage}%` }}\r\n                    ></div>\r\n                  </div>\r\n                )}\r\n                \r\n                {isUserVote && (\r\n                  <div className=\"user-vote-indicator\">âœ“</div>\r\n                )}\r\n\r\n                {isVotingInProgress && !hasVoted && (\r\n                  <div className=\"voting-indicator\">Voting...</div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {hasVoted && (\r\n          <div className=\"vote-feedback\">\r\n            <p>Thanks for voting! ðŸŽ‰</p>\r\n          </div>\r\n        )}\r\n\r\n        {isVotingInProgress && (\r\n          <div className=\"voting-progress\">\r\n            <p>Submitting your vote...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (presentationMode) {\r\n    // Full-screen presentation mode\r\n    return (\r\n      <div className=\"poll-viewer presentation-mode\">\r\n        {activePoll ? (\r\n          <div className=\"presentation-content\">\r\n            {renderPoll(activePoll)}\r\n          </div>\r\n        ) : (\r\n          <div className=\"presentation-placeholder\">\r\n            <h1>No poll selected</h1>\r\n            <p>Select a poll to start the presentation</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"poll-viewer\">\r\n      <div className=\"poll-viewer-header\">\r\n        <h1>Poll Viewer</h1>\r\n        <div className=\"poll-selector\">\r\n          <select \r\n            value={activePoll?._id || ''} \r\n            onChange={(e) => {\r\n              const poll = polls.find(p => p._id === e.target.value);\r\n              onPollSelect(poll);\r\n            }}\r\n            className=\"poll-select\"\r\n          >\r\n            <option value=\"\">Select a poll...</option>\r\n            {polls.map(poll => (\r\n              <option key={poll._id} value={poll._id}>\r\n                {extractPlainFromMaybeJson(poll.question)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"poll-viewer-content\">\r\n        {activePoll ? (\r\n          renderPoll(activePoll)\r\n        ) : (\r\n          <div className=\"no-poll-selected\">\r\n            <h2>No poll selected</h2>\r\n            <p>Choose a poll from the dropdown above to start voting</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {polls.length > 0 && (\r\n        <div className=\"poll-list-mini\">\r\n          <h3>All Polls</h3>\r\n          <div className=\"mini-poll-list\">\r\n            {polls.map(poll => (\r\n              <div\r\n                key={poll._id}\r\n                className={`mini-poll-item ${activePoll?._id === poll._id ? 'active' : ''}`}\r\n                onClick={() => onPollSelect(poll)}\r\n              >\r\n                <span className=\"mini-poll-title\">\r\n                  {extractPlainFromMaybeJson(poll.question)}\r\n                </span>\r\n                <span className=\"mini-poll-votes\">\r\n                  {poll.totalVotes} votes\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}