{"ast":null,"code":"var _jsxFileName = \"D:\\\\server\\\\poll-editor\\\\src\\\\components\\\\PollViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { usePollContext } from '../context/PollContext';\nimport { votePoll } from '../redux/pollsSlice';\nimport socketService from '../socket/socket';\nimport './PollViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollViewer = ({\n  polls,\n  selectedPoll,\n  onPollSelect,\n  presentationMode = false\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    settings\n  } = usePollContext();\n  const {\n    currentPoll\n  } = useSelector(state => state.polls);\n  const [votedPolls, setVotedPolls] = useState(new Set());\n  const [localVotes, setLocalVotes] = useState({});\n\n  // Use selectedPoll or currentPoll\n  const activePoll = selectedPoll || currentPoll;\n  useEffect(() => {\n    // Listen for vote updates from WebSocket\n    socketService.onVoteUpdate(({\n      pollId,\n      updatedPoll\n    }) => {\n      if (updatedPoll) {\n        dispatch({\n          type: 'polls/updatePollInStore',\n          payload: updatedPoll\n        });\n      }\n    });\n    return () => {\n      socketService.off('vote_update');\n    };\n  }, [dispatch]);\n  const getQuestionText = poll => {\n    try {\n      const questionData = JSON.parse(poll.question);\n      if (questionData.root && questionData.root.children) {\n        return questionData.root.children.map(child => {\n          var _child$children;\n          return ((_child$children = child.children) === null || _child$children === void 0 ? void 0 : _child$children.map(c => c.text).join('')) || '';\n        }).join(' ');\n      }\n    } catch (e) {\n      return poll.question;\n    }\n    return 'Untitled Poll';\n  };\n  const handleVote = async (pollId, optionId) => {\n    if (votedPolls.has(pollId)) {\n      return; // Already voted\n    }\n    try {\n      const result = await dispatch(votePoll({\n        pollId,\n        optionId\n      })).unwrap();\n\n      // Update local state\n      setVotedPolls(prev => new Set([...prev, pollId]));\n      setLocalVotes(prev => ({\n        ...prev,\n        [pollId]: optionId\n      }));\n\n      // Broadcast vote via WebSocket\n      socketService.broadcastVote(pollId, optionId, result);\n    } catch (error) {\n      console.error('Vote failed:', error);\n    }\n  };\n  const calculatePercentage = (votes, totalVotes) => {\n    if (totalVotes === 0) return 0;\n    return Math.round(votes / totalVotes * 100);\n  };\n  const renderPoll = poll => {\n    const questionText = getQuestionText(poll);\n    const hasVoted = votedPolls.has(poll._id);\n    const userVote = localVotes[poll._id];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-question\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-status\",\n            children: poll.isActive ? '🟢 Active' : '🔴 Inactive'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-votes\",\n            children: [poll.totalVotes, \" vote\", poll.totalVotes !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-options\",\n        children: poll.options.map(option => {\n          const percentage = calculatePercentage(option.votes, poll.totalVotes);\n          const isUserVote = userVote === option._id;\n          const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''}`,\n            onClick: () => !hasVoted && poll.isActive && handleVote(poll._id, option._id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-text\",\n                children: option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), hasVoted && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"vote-count\",\n                  children: option.votes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"percentage\",\n                  children: [percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), hasVoted && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vote-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-fill\",\n                style: {\n                  width: `${percentage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), isUserVote && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-vote-indicator\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)]\n          }, option._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-feedback\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thanks for voting! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, poll._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  };\n  if (presentationMode) {\n    // Full-screen presentation mode\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer presentation-mode\",\n      children: activePoll ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-content\",\n        children: renderPoll(activePoll)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a poll to start the presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Poll Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) || '',\n          onChange: e => {\n            const poll = polls.find(p => p._id === e.target.value);\n            onPollSelect(poll);\n          },\n          className: \"poll-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a poll...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: poll._id,\n            children: getQuestionText(poll)\n          }, poll._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-content\",\n      children: activePoll ? renderPoll(activePoll) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-poll-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a poll from the dropdown above to start voting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), polls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list-mini\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-poll-list\",\n        children: polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mini-poll-item ${(activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) === poll._id ? 'active' : ''}`,\n          onClick: () => onPollSelect(poll),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-title\",\n            children: getQuestionText(poll)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-votes\",\n            children: [poll.totalVotes, \" votes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)]\n        }, poll._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(PollViewer, \"u+JX2kqjEnjKqwvEhewxIkjztkM=\", false, function () {\n  return [useDispatch, usePollContext, useSelector];\n});\n_c = PollViewer;\nexport default PollViewer;\nvar _c;\n$RefreshReg$(_c, \"PollViewer\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","usePollContext","votePoll","socketService","jsxDEV","_jsxDEV","PollViewer","polls","selectedPoll","onPollSelect","presentationMode","_s","dispatch","settings","currentPoll","state","votedPolls","setVotedPolls","Set","localVotes","setLocalVotes","activePoll","onVoteUpdate","pollId","updatedPoll","type","payload","off","getQuestionText","poll","questionData","JSON","parse","question","root","children","map","child","_child$children","c","text","join","e","handleVote","optionId","has","result","unwrap","prev","broadcastVote","error","console","calculatePercentage","votes","totalVotes","Math","round","renderPoll","questionText","hasVoted","_id","userVote","className","fileName","_jsxFileName","lineNumber","columnNumber","isActive","options","option","percentage","isUserVote","isWinning","max","o","onClick","showResults","style","width","value","onChange","find","p","target","length","_c","$RefreshReg$"],"sources":["D:/server/poll-editor/src/components/PollViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { usePollContext } from '../context/PollContext';\r\nimport { votePoll } from '../redux/pollsSlice';\r\nimport socketService from '../socket/socket';\r\nimport './PollViewer.css';\r\n\r\nconst PollViewer = ({ polls, selectedPoll, onPollSelect, presentationMode = false }) => {\r\n  const dispatch = useDispatch();\r\n  const { settings } = usePollContext();\r\n  const { currentPoll } = useSelector(state => state.polls);\r\n  \r\n  const [votedPolls, setVotedPolls] = useState(new Set());\r\n  const [localVotes, setLocalVotes] = useState({});\r\n\r\n  // Use selectedPoll or currentPoll\r\n  const activePoll = selectedPoll || currentPoll;\r\n\r\n  useEffect(() => {\r\n    // Listen for vote updates from WebSocket\r\n    socketService.onVoteUpdate(({ pollId, updatedPoll }) => {\r\n      if (updatedPoll) {\r\n        dispatch({ type: 'polls/updatePollInStore', payload: updatedPoll });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socketService.off('vote_update');\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const getQuestionText = (poll) => {\r\n    try {\r\n      const questionData = JSON.parse(poll.question);\r\n      if (questionData.root && questionData.root.children) {\r\n        return questionData.root.children\r\n          .map(child => child.children?.map(c => c.text).join('') || '')\r\n          .join(' ');\r\n      }\r\n    } catch (e) {\r\n      return poll.question;\r\n    }\r\n    return 'Untitled Poll';\r\n  };\r\n\r\n  const handleVote = async (pollId, optionId) => {\r\n    if (votedPolls.has(pollId)) {\r\n      return; // Already voted\r\n    }\r\n\r\n    try {\r\n      const result = await dispatch(votePoll({ pollId, optionId })).unwrap();\r\n      \r\n      // Update local state\r\n      setVotedPolls(prev => new Set([...prev, pollId]));\r\n      setLocalVotes(prev => ({ ...prev, [pollId]: optionId }));\r\n      \r\n      // Broadcast vote via WebSocket\r\n      socketService.broadcastVote(pollId, optionId, result);\r\n    } catch (error) {\r\n      console.error('Vote failed:', error);\r\n    }\r\n  };\r\n\r\n  const calculatePercentage = (votes, totalVotes) => {\r\n    if (totalVotes === 0) return 0;\r\n    return Math.round((votes / totalVotes) * 100);\r\n  };\r\n\r\n  const renderPoll = (poll) => {\r\n    const questionText = getQuestionText(poll);\r\n    const hasVoted = votedPolls.has(poll._id);\r\n    const userVote = localVotes[poll._id];\r\n\r\n    return (\r\n      <div key={poll._id} className=\"poll-viewer-card\">\r\n        <div className=\"poll-question\">\r\n          <h2>{questionText}</h2>\r\n          <div className=\"poll-meta\">\r\n            <span className=\"poll-status\">\r\n              {poll.isActive ? '🟢 Active' : '🔴 Inactive'}\r\n            </span>\r\n            <span className=\"poll-votes\">\r\n              {poll.totalVotes} vote{poll.totalVotes !== 1 ? 's' : ''}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"poll-options\">\r\n          {poll.options.map((option) => {\r\n            const percentage = calculatePercentage(option.votes, poll.totalVotes);\r\n            const isUserVote = userVote === option._id;\r\n            const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\r\n\r\n            return (\r\n              <div\r\n                key={option._id}\r\n                className={`poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''}`}\r\n                onClick={() => !hasVoted && poll.isActive && handleVote(poll._id, option._id)}\r\n              >\r\n                <div className=\"option-content\">\r\n                  <div className=\"option-text\">{option.text}</div>\r\n                  {hasVoted && settings.showResults && (\r\n                    <div className=\"option-stats\">\r\n                      <span className=\"vote-count\">{option.votes}</span>\r\n                      <span className=\"percentage\">{percentage}%</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {hasVoted && settings.showResults && (\r\n                  <div className=\"vote-bar\">\r\n                    <div \r\n                      className=\"vote-fill\"\r\n                      style={{ width: `${percentage}%` }}\r\n                    ></div>\r\n                  </div>\r\n                )}\r\n                \r\n                {isUserVote && (\r\n                  <div className=\"user-vote-indicator\">✓</div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {hasVoted && (\r\n          <div className=\"vote-feedback\">\r\n            <p>Thanks for voting! 🎉</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (presentationMode) {\r\n    // Full-screen presentation mode\r\n    return (\r\n      <div className=\"poll-viewer presentation-mode\">\r\n        {activePoll ? (\r\n          <div className=\"presentation-content\">\r\n            {renderPoll(activePoll)}\r\n          </div>\r\n        ) : (\r\n          <div className=\"presentation-placeholder\">\r\n            <h1>No poll selected</h1>\r\n            <p>Select a poll to start the presentation</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"poll-viewer\">\r\n      <div className=\"poll-viewer-header\">\r\n        <h1>Poll Viewer</h1>\r\n        <div className=\"poll-selector\">\r\n          <select \r\n            value={activePoll?._id || ''} \r\n            onChange={(e) => {\r\n              const poll = polls.find(p => p._id === e.target.value);\r\n              onPollSelect(poll);\r\n            }}\r\n            className=\"poll-select\"\r\n          >\r\n            <option value=\"\">Select a poll...</option>\r\n            {polls.map(poll => (\r\n              <option key={poll._id} value={poll._id}>\r\n                {getQuestionText(poll)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"poll-viewer-content\">\r\n        {activePoll ? (\r\n          renderPoll(activePoll)\r\n        ) : (\r\n          <div className=\"no-poll-selected\">\r\n            <h2>No poll selected</h2>\r\n            <p>Choose a poll from the dropdown above to start voting</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {polls.length > 0 && (\r\n        <div className=\"poll-list-mini\">\r\n          <h3>All Polls</h3>\r\n          <div className=\"mini-poll-list\">\r\n            {polls.map(poll => (\r\n              <div\r\n                key={poll._id}\r\n                className={`mini-poll-item ${activePoll?._id === poll._id ? 'active' : ''}`}\r\n                onClick={() => onPollSelect(poll)}\r\n              >\r\n                <span className=\"mini-poll-title\">\r\n                  {getQuestionText(poll)}\r\n                </span>\r\n                <span className=\"mini-poll-votes\">\r\n                  {poll.totalVotes} votes\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}