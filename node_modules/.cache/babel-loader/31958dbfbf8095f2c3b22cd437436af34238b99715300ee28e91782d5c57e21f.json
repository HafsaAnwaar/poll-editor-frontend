{"ast":null,"code":"var _jsxFileName = \"D:\\\\server\\\\poll-editor\\\\src\\\\components\\\\PollViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { usePollContext } from '../context/PollContext';\nimport { votePoll, incrementVoteOptimistic, decrementVoteOptimistic, switchVoteOptimistic } from '../redux/pollsSlice';\nimport socketService from '../socket/socket';\nimport './PollViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollViewer = ({\n  polls,\n  selectedPoll,\n  onPollSelect,\n  presentationMode = false\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    settings\n  } = usePollContext();\n  const {\n    currentPoll\n  } = useSelector(state => state.polls);\n  const [votedPolls, setVotedPolls] = useState(new Set());\n  const [localVotes, setLocalVotes] = useState({});\n  const voteGuardRef = useRef(new Set());\n\n  // Persist vote state locally to prevent multi-voting across reloads\n  useEffect(() => {\n    try {\n      const storedVoted = JSON.parse(localStorage.getItem('votedPolls') || '[]');\n      const storedVotes = JSON.parse(localStorage.getItem('localVotes') || '{}');\n      if (Array.isArray(storedVoted)) {\n        setVotedPolls(new Set(storedVoted));\n      }\n      if (storedVotes && typeof storedVotes === 'object') {\n        setLocalVotes(storedVotes);\n      }\n    } catch (_) {\n      // ignore corrupted storage\n    }\n  }, []);\n  useEffect(() => {\n    try {\n      localStorage.setItem('votedPolls', JSON.stringify(Array.from(votedPolls)));\n    } catch (_) {}\n  }, [votedPolls]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('localVotes', JSON.stringify(localVotes));\n    } catch (_) {}\n  }, [localVotes]);\n  const activePoll = useMemo(() => {\n    const selectedId = (selectedPoll === null || selectedPoll === void 0 ? void 0 : selectedPoll._id) || (currentPoll === null || currentPoll === void 0 ? void 0 : currentPoll._id);\n    if (!selectedId) return null;\n    return polls.find(p => p._id === selectedId) || null;\n  }, [polls, selectedPoll, currentPoll]);\n  useEffect(() => {\n    // Listen for vote updates from WebSocket\n    socketService.onVoteUpdate(({\n      pollId,\n      updatedPoll\n    }) => {\n      if (updatedPoll) {\n        dispatch({\n          type: 'polls/updatePollInStore',\n          payload: updatedPoll\n        });\n      }\n    });\n    return () => {\n      socketService.off('vote_update');\n    };\n  }, [dispatch]);\n  const extractPlainFromMaybeJson = str => {\n    if (!str) return '';\n    const trimmed = String(str).trim();\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\n      try {\n        var _json$root;\n        const json = JSON.parse(trimmed);\n        const children = (json === null || json === void 0 ? void 0 : (_json$root = json.root) === null || _json$root === void 0 ? void 0 : _json$root.children) || [];\n        const text = children.map(node => Array.isArray(node.children) ? node.children.map(c => c.text || '').join('') : '').join(' ').trim();\n        return text || 'Untitled Poll';\n      } catch (_) {\n        return 'Untitled Poll';\n      }\n    }\n    return trimmed || 'Untitled Poll';\n  };\n  const renderQuestion = poll => {\n    if (poll.questionHtml) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        dangerouslySetInnerHTML: {\n          __html: poll.questionHtml\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: extractPlainFromMaybeJson(poll.question)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  };\n\n  /**\r\n   * MAIN: handleVote\r\n   * - If user hasn't voted -> optimistic increment + votePoll({mode: 'vote'})\r\n   * - If user voted the same option -> optimistic decrement + votePoll({mode: 'undo'})\r\n   * - If user voted a different option -> optimistic switch + votePoll({mode: 'switch'})\r\n   */\n  const handleVote = async (pollId, optionId) => {\n    // Guard: prevent rapid re-entrancy per-poll\n    if (voteGuardRef.current.has(pollId)) return;\n    voteGuardRef.current.add(pollId);\n    const hasVoted = votedPolls.has(pollId);\n    const currentSelection = localVotes[pollId]; // may be undefined\n\n    // CASE 1: user clicks same option again -> undo\n    if (hasVoted && currentSelection === optionId) {\n      // Optimistic UI: decrement votes for that option and remove vote\n      dispatch(decrementVoteOptimistic({\n        pollId,\n        optionId\n      }));\n      setVotedPolls(prev => {\n        const next = new Set(prev);\n        next.delete(pollId);\n        return next;\n      });\n      setLocalVotes(prev => {\n        const next = {\n          ...prev\n        };\n        delete next[pollId];\n        return next;\n      });\n      try {\n        // ask backend to remove vote\n        await dispatch(votePoll({\n          pollId,\n          optionId,\n          mode: 'undo'\n        })).unwrap();\n        // broadcast undo (implement broadcastUndo in socketService or reuse broadcastVote with mode)\n        if (socketService.broadcastUndo) {\n          socketService.broadcastUndo(pollId, optionId);\n        } else if (socketService.broadcastVote) {\n          socketService.broadcastVote(pollId, optionId, {\n            mode: 'undo'\n          });\n        }\n      } catch (error) {\n        console.error('Undo vote failed:', error);\n        // Revert optimistic change so user can retry\n        dispatch(incrementVoteOptimistic({\n          pollId,\n          optionId\n        }));\n        setVotedPolls(prev => new Set([...prev, pollId]));\n        setLocalVotes(prev => ({\n          ...prev,\n          [pollId]: optionId\n        }));\n      } finally {\n        voteGuardRef.current.delete(pollId);\n      }\n      return;\n    }\n\n    // CASE 2: user already voted another option -> switch\n    if (hasVoted && currentSelection && currentSelection !== optionId) {\n      const oldOptionId = currentSelection;\n\n      // Optimistic UI: decrement old, increment new\n      dispatch(switchVoteOptimistic({\n        pollId,\n        fromOptionId: oldOptionId,\n        toOptionId: optionId\n      }));\n\n      // Update local vote map (stays in votedPolls)\n      setLocalVotes(prev => ({\n        ...prev,\n        [pollId]: optionId\n      }));\n      try {\n        // backend handles switching (or perform undo + vote on backend)\n        await dispatch(votePoll({\n          pollId,\n          optionId,\n          fromOptionId: oldOptionId,\n          mode: 'switch'\n        })).unwrap();\n        if (socketService.broadcastVote) {\n          socketService.broadcastVote(pollId, optionId, {\n            mode: 'switch',\n            fromOptionId: oldOptionId\n          });\n        }\n      } catch (error) {\n        console.error('Switch vote failed:', error);\n        // revert optimistic UI\n        dispatch(switchVoteOptimistic({\n          pollId,\n          fromOptionId: optionId,\n          toOptionId: oldOptionId\n        })); // swap back\n        setLocalVotes(prev => ({\n          ...prev,\n          [pollId]: oldOptionId\n        }));\n      } finally {\n        voteGuardRef.current.delete(pollId);\n      }\n      return;\n    }\n\n    // CASE 3: user hasn't voted yet -> normal vote\n    if (!hasVoted) {\n      // mark voted locally\n      setVotedPolls(prev => new Set([...prev, pollId]));\n      setLocalVotes(prev => ({\n        ...prev,\n        [pollId]: optionId\n      }));\n\n      // Optimistic UI increment\n      dispatch(incrementVoteOptimistic({\n        pollId,\n        optionId\n      }));\n      try {\n        const result = await dispatch(votePoll({\n          pollId,\n          optionId,\n          mode: 'vote'\n        })).unwrap();\n        if (socketService.broadcastVote) {\n          socketService.broadcastVote(pollId, optionId, result);\n        }\n      } catch (error) {\n        console.error('Vote failed:', error);\n        // revert optimistic changes so user can try again\n        dispatch(decrementVoteOptimistic({\n          pollId,\n          optionId\n        }));\n        setVotedPolls(prev => {\n          const next = new Set(prev);\n          next.delete(pollId);\n          return next;\n        });\n        setLocalVotes(prev => {\n          const next = {\n            ...prev\n          };\n          delete next[pollId];\n          return next;\n        });\n      } finally {\n        voteGuardRef.current.delete(pollId);\n      }\n      return;\n    }\n\n    // fallback release guard\n    voteGuardRef.current.delete(pollId);\n  };\n  const calculatePercentage = (votes, totalVotes) => {\n    if (totalVotes === 0) return 0;\n    return Math.round(votes / totalVotes * 100);\n  };\n  const renderPoll = poll => {\n    const hasVoted = votedPolls.has(poll._id);\n    const userVote = localVotes[poll._id];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-question\",\n        children: [renderQuestion(poll), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-status\",\n            children: poll.isActive ? 'ðŸŸ¢ Active' : 'ðŸ”´ Inactive'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-votes\",\n            children: [poll.totalVotes, \" vote\", poll.totalVotes !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-options\",\n        children: poll.options.map(option => {\n          const percentage = calculatePercentage(option.votes, poll.totalVotes);\n          const isUserVote = userVote === option._id;\n          const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''}`,\n            onClick: () => !voteGuardRef.current.has(poll._id) && poll.isActive && handleVote(poll._id, option._id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-text\",\n                children: option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), (hasVoted || settings.liveMode) && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"vote-count\",\n                  children: option.votes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"percentage\",\n                  children: [percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), (hasVoted || settings.liveMode) && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vote-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-fill\",\n                style: {\n                  width: `${percentage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), isUserVote && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-vote-indicator\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this)]\n          }, option._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-feedback\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thanks for voting! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, poll._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  };\n  if (presentationMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer presentation-mode\",\n      children: activePoll ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-content\",\n        children: renderPoll(activePoll)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a poll to start the presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Poll Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) || '',\n          onChange: e => {\n            const poll = polls.find(p => p._id === e.target.value);\n            onPollSelect(poll);\n          },\n          className: \"poll-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a poll...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: poll._id,\n            children: extractPlainFromMaybeJson(poll.question)\n          }, poll._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-content\",\n      children: activePoll ? renderPoll(activePoll) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-poll-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a poll from the dropdown above to start voting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), polls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list-mini\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-poll-list\",\n        children: polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mini-poll-item ${(activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) === poll._id ? 'active' : ''}`,\n          onClick: () => onPollSelect(poll),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-title\",\n            children: extractPlainFromMaybeJson(poll.question)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-votes\",\n            children: [poll.totalVotes, \" votes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)]\n        }, poll._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n_s(PollViewer, \"IjphX+8DrSKUZ/6CQn/0t8/K7i0=\", false, function () {\n  return [useDispatch, usePollContext, useSelector];\n});\n_c = PollViewer;\nexport default PollViewer;\nvar _c;\n$RefreshReg$(_c, \"PollViewer\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","useDispatch","useSelector","usePollContext","votePoll","incrementVoteOptimistic","decrementVoteOptimistic","switchVoteOptimistic","socketService","jsxDEV","_jsxDEV","PollViewer","polls","selectedPoll","onPollSelect","presentationMode","_s","dispatch","settings","currentPoll","state","votedPolls","setVotedPolls","Set","localVotes","setLocalVotes","voteGuardRef","storedVoted","JSON","parse","localStorage","getItem","storedVotes","Array","isArray","_","setItem","stringify","from","activePoll","selectedId","_id","find","p","onVoteUpdate","pollId","updatedPoll","type","payload","off","extractPlainFromMaybeJson","str","trimmed","String","trim","startsWith","includes","_json$root","json","children","root","text","map","node","c","join","renderQuestion","poll","questionHtml","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","question","handleVote","optionId","current","has","add","hasVoted","currentSelection","prev","next","delete","mode","unwrap","broadcastUndo","broadcastVote","error","console","oldOptionId","fromOptionId","toOptionId","result","calculatePercentage","votes","totalVotes","Math","round","renderPoll","userVote","className","isActive","options","option","percentage","isUserVote","isWinning","max","o","onClick","liveMode","showResults","style","width","value","onChange","e","target","length","_c","$RefreshReg$"],"sources":["D:/server/poll-editor/src/components/PollViewer.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { usePollContext } from '../context/PollContext';\r\nimport { votePoll, incrementVoteOptimistic, decrementVoteOptimistic, switchVoteOptimistic } from '../redux/pollsSlice';\r\nimport socketService from '../socket/socket';\r\nimport './PollViewer.css';\r\n\r\nconst PollViewer = ({ polls, selectedPoll, onPollSelect, presentationMode = false }) => {\r\n  const dispatch = useDispatch();\r\n  const { settings } = usePollContext();\r\n  const { currentPoll } = useSelector(state => state.polls);\r\n\r\n  const [votedPolls, setVotedPolls] = useState(new Set());\r\n  const [localVotes, setLocalVotes] = useState({});\r\n  const voteGuardRef = useRef(new Set());\r\n\r\n  // Persist vote state locally to prevent multi-voting across reloads\r\n  useEffect(() => {\r\n    try {\r\n      const storedVoted = JSON.parse(localStorage.getItem('votedPolls') || '[]');\r\n      const storedVotes = JSON.parse(localStorage.getItem('localVotes') || '{}');\r\n      if (Array.isArray(storedVoted)) {\r\n        setVotedPolls(new Set(storedVoted));\r\n      }\r\n      if (storedVotes && typeof storedVotes === 'object') {\r\n        setLocalVotes(storedVotes);\r\n      }\r\n    } catch (_) {\r\n      // ignore corrupted storage\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('votedPolls', JSON.stringify(Array.from(votedPolls)));\r\n    } catch (_) {}\r\n  }, [votedPolls]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('localVotes', JSON.stringify(localVotes));\r\n    } catch (_) {}\r\n  }, [localVotes]);\r\n\r\n  const activePoll = useMemo(() => {\r\n    const selectedId = selectedPoll?._id || currentPoll?._id;\r\n    if (!selectedId) return null;\r\n    return polls.find(p => p._id === selectedId) || null;\r\n  }, [polls, selectedPoll, currentPoll]);\r\n\r\n  useEffect(() => {\r\n    // Listen for vote updates from WebSocket\r\n    socketService.onVoteUpdate(({ pollId, updatedPoll }) => {\r\n      if (updatedPoll) {\r\n        dispatch({ type: 'polls/updatePollInStore', payload: updatedPoll });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socketService.off('vote_update');\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const extractPlainFromMaybeJson = (str) => {\r\n    if (!str) return '';\r\n    const trimmed = String(str).trim();\r\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\r\n      try {\r\n        const json = JSON.parse(trimmed);\r\n        const children = json?.root?.children || [];\r\n        const text = children\r\n          .map((node) => Array.isArray(node.children) ? node.children.map((c) => c.text || '').join('') : '')\r\n          .join(' ')\r\n          .trim();\r\n        return text || 'Untitled Poll';\r\n      } catch (_) {\r\n        return 'Untitled Poll';\r\n      }\r\n    }\r\n    return trimmed || 'Untitled Poll';\r\n  };\r\n\r\n  const renderQuestion = (poll) => {\r\n    if (poll.questionHtml) {\r\n      return <h2 dangerouslySetInnerHTML={{ __html: poll.questionHtml }} />;\r\n    }\r\n    return <h2>{extractPlainFromMaybeJson(poll.question)}</h2>;\r\n  };\r\n\r\n  /**\r\n   * MAIN: handleVote\r\n   * - If user hasn't voted -> optimistic increment + votePoll({mode: 'vote'})\r\n   * - If user voted the same option -> optimistic decrement + votePoll({mode: 'undo'})\r\n   * - If user voted a different option -> optimistic switch + votePoll({mode: 'switch'})\r\n   */\r\n  const handleVote = async (pollId, optionId) => {\r\n    // Guard: prevent rapid re-entrancy per-poll\r\n    if (voteGuardRef.current.has(pollId)) return;\r\n    voteGuardRef.current.add(pollId);\r\n\r\n    const hasVoted = votedPolls.has(pollId);\r\n    const currentSelection = localVotes[pollId]; // may be undefined\r\n\r\n    // CASE 1: user clicks same option again -> undo\r\n    if (hasVoted && currentSelection === optionId) {\r\n      // Optimistic UI: decrement votes for that option and remove vote\r\n      dispatch(decrementVoteOptimistic({ pollId, optionId }));\r\n      setVotedPolls(prev => {\r\n        const next = new Set(prev);\r\n        next.delete(pollId);\r\n        return next;\r\n      });\r\n      setLocalVotes(prev => {\r\n        const next = { ...prev };\r\n        delete next[pollId];\r\n        return next;\r\n      });\r\n\r\n      try {\r\n        // ask backend to remove vote\r\n        await dispatch(votePoll({ pollId, optionId, mode: 'undo' })).unwrap();\r\n        // broadcast undo (implement broadcastUndo in socketService or reuse broadcastVote with mode)\r\n        if (socketService.broadcastUndo) {\r\n          socketService.broadcastUndo(pollId, optionId);\r\n        } else if (socketService.broadcastVote) {\r\n          socketService.broadcastVote(pollId, optionId, { mode: 'undo' });\r\n        }\r\n      } catch (error) {\r\n        console.error('Undo vote failed:', error);\r\n        // Revert optimistic change so user can retry\r\n        dispatch(incrementVoteOptimistic({ pollId, optionId }));\r\n        setVotedPolls(prev => new Set([...prev, pollId]));\r\n        setLocalVotes(prev => ({ ...prev, [pollId]: optionId }));\r\n      } finally {\r\n        voteGuardRef.current.delete(pollId);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // CASE 2: user already voted another option -> switch\r\n    if (hasVoted && currentSelection && currentSelection !== optionId) {\r\n      const oldOptionId = currentSelection;\r\n\r\n      // Optimistic UI: decrement old, increment new\r\n      dispatch(switchVoteOptimistic({ pollId, fromOptionId: oldOptionId, toOptionId: optionId }));\r\n\r\n      // Update local vote map (stays in votedPolls)\r\n      setLocalVotes(prev => ({ ...prev, [pollId]: optionId }));\r\n\r\n      try {\r\n        // backend handles switching (or perform undo + vote on backend)\r\n        await dispatch(votePoll({ pollId, optionId, fromOptionId: oldOptionId, mode: 'switch' })).unwrap();\r\n        if (socketService.broadcastVote) {\r\n          socketService.broadcastVote(pollId, optionId, { mode: 'switch', fromOptionId: oldOptionId });\r\n        }\r\n      } catch (error) {\r\n        console.error('Switch vote failed:', error);\r\n        // revert optimistic UI\r\n        dispatch(switchVoteOptimistic({ pollId, fromOptionId: optionId, toOptionId: oldOptionId })); // swap back\r\n        setLocalVotes(prev => ({ ...prev, [pollId]: oldOptionId }));\r\n      } finally {\r\n        voteGuardRef.current.delete(pollId);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // CASE 3: user hasn't voted yet -> normal vote\r\n    if (!hasVoted) {\r\n      // mark voted locally\r\n      setVotedPolls(prev => new Set([...prev, pollId]));\r\n      setLocalVotes(prev => ({ ...prev, [pollId]: optionId }));\r\n\r\n      // Optimistic UI increment\r\n      dispatch(incrementVoteOptimistic({ pollId, optionId }));\r\n\r\n      try {\r\n        const result = await dispatch(votePoll({ pollId, optionId, mode: 'vote' })).unwrap();\r\n        if (socketService.broadcastVote) {\r\n          socketService.broadcastVote(pollId, optionId, result);\r\n        }\r\n      } catch (error) {\r\n        console.error('Vote failed:', error);\r\n        // revert optimistic changes so user can try again\r\n        dispatch(decrementVoteOptimistic({ pollId, optionId }));\r\n        setVotedPolls(prev => {\r\n          const next = new Set(prev);\r\n          next.delete(pollId);\r\n          return next;\r\n        });\r\n        setLocalVotes(prev => {\r\n          const next = { ...prev };\r\n          delete next[pollId];\r\n          return next;\r\n        });\r\n      } finally {\r\n        voteGuardRef.current.delete(pollId);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // fallback release guard\r\n    voteGuardRef.current.delete(pollId);\r\n  };\r\n\r\n  const calculatePercentage = (votes, totalVotes) => {\r\n    if (totalVotes === 0) return 0;\r\n    return Math.round((votes / totalVotes) * 100);\r\n  };\r\n\r\n  const renderPoll = (poll) => {\r\n    const hasVoted = votedPolls.has(poll._id);\r\n    const userVote = localVotes[poll._id];\r\n\r\n    return (\r\n      <div key={poll._id} className=\"poll-viewer-card\">\r\n        <div className=\"poll-question\">\r\n          {renderQuestion(poll)}\r\n          <div className=\"poll-meta\">\r\n            <span className=\"poll-status\">\r\n              {poll.isActive ? 'ðŸŸ¢ Active' : 'ðŸ”´ Inactive'}\r\n            </span>\r\n            <span className=\"poll-votes\">\r\n              {poll.totalVotes} vote{poll.totalVotes !== 1 ? 's' : ''}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"poll-options\">\r\n          {poll.options.map((option) => {\r\n            const percentage = calculatePercentage(option.votes, poll.totalVotes);\r\n            const isUserVote = userVote === option._id;\r\n            const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\r\n\r\n            return (\r\n              <div\r\n                key={option._id}\r\n                className={`poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''}`}\r\n                onClick={() => !voteGuardRef.current.has(poll._id) && poll.isActive && handleVote(poll._id, option._id)}\r\n              >\r\n                <div className=\"option-content\">\r\n                  <div className=\"option-text\">{option.text}</div>\r\n                  {(hasVoted || settings.liveMode) && settings.showResults && (\r\n                    <div className=\"option-stats\">\r\n                      <span className=\"vote-count\">{option.votes}</span>\r\n                      <span className=\"percentage\">{percentage}%</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {(hasVoted || settings.liveMode) && settings.showResults && (\r\n                  <div className=\"vote-bar\">\r\n                    <div\r\n                      className=\"vote-fill\"\r\n                      style={{ width: `${percentage}%` }}\r\n                    ></div>\r\n                  </div>\r\n                )}\r\n\r\n                {isUserVote && (\r\n                  <div className=\"user-vote-indicator\">âœ“</div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {hasVoted && (\r\n          <div className=\"vote-feedback\">\r\n            <p>Thanks for voting! ðŸŽ‰</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (presentationMode) {\r\n    return (\r\n      <div className=\"poll-viewer presentation-mode\">\r\n        {activePoll ? (\r\n          <div className=\"presentation-content\">\r\n            {renderPoll(activePoll)}\r\n          </div>\r\n        ) : (\r\n          <div className=\"presentation-placeholder\">\r\n            <h1>No poll selected</h1>\r\n            <p>Select a poll to start the presentation</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"poll-viewer\">\r\n      <div className=\"poll-viewer-header\">\r\n        <h1>Poll Viewer</h1>\r\n        <div className=\"poll-selector\">\r\n          <select\r\n            value={activePoll?._id || ''}\r\n            onChange={(e) => {\r\n              const poll = polls.find(p => p._id === e.target.value);\r\n              onPollSelect(poll);\r\n            }}\r\n            className=\"poll-select\"\r\n          >\r\n            <option value=\"\">Select a poll...</option>\r\n            {polls.map(poll => (\r\n              <option key={poll._id} value={poll._id}>\r\n                {extractPlainFromMaybeJson(poll.question)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"poll-viewer-content\">\r\n        {activePoll ? (\r\n          renderPoll(activePoll)\r\n        ) : (\r\n          <div className=\"no-poll-selected\">\r\n            <h2>No poll selected</h2>\r\n            <p>Choose a poll from the dropdown above to start voting</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {polls.length > 0 && (\r\n        <div className=\"poll-list-mini\">\r\n          <h3>All Polls</h3>\r\n          <div className=\"mini-poll-list\">\r\n            {polls.map(poll => (\r\n              <div\r\n                key={poll._id}\r\n                className={`mini-poll-item ${activePoll?._id === poll._id ? 'active' : ''}`}\r\n                onClick={() => onPollSelect(poll)}\r\n              >\r\n                <span className=\"mini-poll-title\">\r\n                  {extractPlainFromMaybeJson(poll.question)}\r\n                </span>\r\n                <span className=\"mini-poll-votes\">\r\n                  {poll.totalVotes} votes\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollViewer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACnE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,QAAQ,EAAEC,uBAAuB,EAAEC,uBAAuB,EAAEC,oBAAoB,QAAQ,qBAAqB;AACtH,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,YAAY;EAAEC,YAAY;EAAEC,gBAAgB,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACtF,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEiB;EAAS,CAAC,GAAGf,cAAc,CAAC,CAAC;EACrC,MAAM;IAAEgB;EAAY,CAAC,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACR,KAAK,CAAC;EAEzD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,IAAI0B,GAAG,CAAC,CAAC,CAAC;EACvD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM6B,YAAY,GAAG1B,MAAM,CAAC,IAAIuB,GAAG,CAAC,CAAC,CAAC;;EAEtC;EACAzB,SAAS,CAAC,MAAM;IACd,IAAI;MACF,MAAM6B,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC;MAC1E,MAAMC,WAAW,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC;MAC1E,IAAIE,KAAK,CAACC,OAAO,CAACP,WAAW,CAAC,EAAE;QAC9BL,aAAa,CAAC,IAAIC,GAAG,CAACI,WAAW,CAAC,CAAC;MACrC;MACA,IAAIK,WAAW,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;QAClDP,aAAa,CAACO,WAAW,CAAC;MAC5B;IACF,CAAC,CAAC,OAAOG,CAAC,EAAE;MACV;IAAA;EAEJ,CAAC,EAAE,EAAE,CAAC;EAENrC,SAAS,CAAC,MAAM;IACd,IAAI;MACFgC,YAAY,CAACM,OAAO,CAAC,YAAY,EAAER,IAAI,CAACS,SAAS,CAACJ,KAAK,CAACK,IAAI,CAACjB,UAAU,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,OAAOc,CAAC,EAAE,CAAC;EACf,CAAC,EAAE,CAACd,UAAU,CAAC,CAAC;EAEhBvB,SAAS,CAAC,MAAM;IACd,IAAI;MACFgC,YAAY,CAACM,OAAO,CAAC,YAAY,EAAER,IAAI,CAACS,SAAS,CAACb,UAAU,CAAC,CAAC;IAChE,CAAC,CAAC,OAAOW,CAAC,EAAE,CAAC;EACf,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhB,MAAMe,UAAU,GAAGxC,OAAO,CAAC,MAAM;IAC/B,MAAMyC,UAAU,GAAG,CAAA3B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE4B,GAAG,MAAItB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEsB,GAAG;IACxD,IAAI,CAACD,UAAU,EAAE,OAAO,IAAI;IAC5B,OAAO5B,KAAK,CAAC8B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACF,GAAG,KAAKD,UAAU,CAAC,IAAI,IAAI;EACtD,CAAC,EAAE,CAAC5B,KAAK,EAAEC,YAAY,EAAEM,WAAW,CAAC,CAAC;EAEtCrB,SAAS,CAAC,MAAM;IACd;IACAU,aAAa,CAACoC,YAAY,CAAC,CAAC;MAAEC,MAAM;MAAEC;IAAY,CAAC,KAAK;MACtD,IAAIA,WAAW,EAAE;QACf7B,QAAQ,CAAC;UAAE8B,IAAI,EAAE,yBAAyB;UAAEC,OAAO,EAAEF;QAAY,CAAC,CAAC;MACrE;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXtC,aAAa,CAACyC,GAAG,CAAC,aAAa,CAAC;IAClC,CAAC;EACH,CAAC,EAAE,CAAChC,QAAQ,CAAC,CAAC;EAEd,MAAMiC,yBAAyB,GAAIC,GAAG,IAAK;IACzC,IAAI,CAACA,GAAG,EAAE,OAAO,EAAE;IACnB,MAAMC,OAAO,GAAGC,MAAM,CAACF,GAAG,CAAC,CAACG,IAAI,CAAC,CAAC;IAClC,IAAIF,OAAO,CAACG,UAAU,CAAC,GAAG,CAAC,IAAIH,OAAO,CAACI,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACzD,IAAI;QAAA,IAAAC,UAAA;QACF,MAAMC,IAAI,GAAG9B,IAAI,CAACC,KAAK,CAACuB,OAAO,CAAC;QAChC,MAAMO,QAAQ,GAAG,CAAAD,IAAI,aAAJA,IAAI,wBAAAD,UAAA,GAAJC,IAAI,CAAEE,IAAI,cAAAH,UAAA,uBAAVA,UAAA,CAAYE,QAAQ,KAAI,EAAE;QAC3C,MAAME,IAAI,GAAGF,QAAQ,CAClBG,GAAG,CAAEC,IAAI,IAAK9B,KAAK,CAACC,OAAO,CAAC6B,IAAI,CAACJ,QAAQ,CAAC,GAAGI,IAAI,CAACJ,QAAQ,CAACG,GAAG,CAAEE,CAAC,IAAKA,CAAC,CAACH,IAAI,IAAI,EAAE,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAClGA,IAAI,CAAC,GAAG,CAAC,CACTX,IAAI,CAAC,CAAC;QACT,OAAOO,IAAI,IAAI,eAAe;MAChC,CAAC,CAAC,OAAO1B,CAAC,EAAE;QACV,OAAO,eAAe;MACxB;IACF;IACA,OAAOiB,OAAO,IAAI,eAAe;EACnC,CAAC;EAED,MAAMc,cAAc,GAAIC,IAAI,IAAK;IAC/B,IAAIA,IAAI,CAACC,YAAY,EAAE;MACrB,oBAAO1D,OAAA;QAAI2D,uBAAuB,EAAE;UAAEC,MAAM,EAAEH,IAAI,CAACC;QAAa;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACvE;IACA,oBAAOhE,OAAA;MAAAiD,QAAA,EAAKT,yBAAyB,CAACiB,IAAI,CAACQ,QAAQ;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5D,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;EACE,MAAME,UAAU,GAAG,MAAAA,CAAO/B,MAAM,EAAEgC,QAAQ,KAAK;IAC7C;IACA,IAAInD,YAAY,CAACoD,OAAO,CAACC,GAAG,CAAClC,MAAM,CAAC,EAAE;IACtCnB,YAAY,CAACoD,OAAO,CAACE,GAAG,CAACnC,MAAM,CAAC;IAEhC,MAAMoC,QAAQ,GAAG5D,UAAU,CAAC0D,GAAG,CAAClC,MAAM,CAAC;IACvC,MAAMqC,gBAAgB,GAAG1D,UAAU,CAACqB,MAAM,CAAC,CAAC,CAAC;;IAE7C;IACA,IAAIoC,QAAQ,IAAIC,gBAAgB,KAAKL,QAAQ,EAAE;MAC7C;MACA5D,QAAQ,CAACX,uBAAuB,CAAC;QAAEuC,MAAM;QAAEgC;MAAS,CAAC,CAAC,CAAC;MACvDvD,aAAa,CAAC6D,IAAI,IAAI;QACpB,MAAMC,IAAI,GAAG,IAAI7D,GAAG,CAAC4D,IAAI,CAAC;QAC1BC,IAAI,CAACC,MAAM,CAACxC,MAAM,CAAC;QACnB,OAAOuC,IAAI;MACb,CAAC,CAAC;MACF3D,aAAa,CAAC0D,IAAI,IAAI;QACpB,MAAMC,IAAI,GAAG;UAAE,GAAGD;QAAK,CAAC;QACxB,OAAOC,IAAI,CAACvC,MAAM,CAAC;QACnB,OAAOuC,IAAI;MACb,CAAC,CAAC;MAEF,IAAI;QACF;QACA,MAAMnE,QAAQ,CAACb,QAAQ,CAAC;UAAEyC,MAAM;UAAEgC,QAAQ;UAAES,IAAI,EAAE;QAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;QACrE;QACA,IAAI/E,aAAa,CAACgF,aAAa,EAAE;UAC/BhF,aAAa,CAACgF,aAAa,CAAC3C,MAAM,EAAEgC,QAAQ,CAAC;QAC/C,CAAC,MAAM,IAAIrE,aAAa,CAACiF,aAAa,EAAE;UACtCjF,aAAa,CAACiF,aAAa,CAAC5C,MAAM,EAAEgC,QAAQ,EAAE;YAAES,IAAI,EAAE;UAAO,CAAC,CAAC;QACjE;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzC;QACAzE,QAAQ,CAACZ,uBAAuB,CAAC;UAAEwC,MAAM;UAAEgC;QAAS,CAAC,CAAC,CAAC;QACvDvD,aAAa,CAAC6D,IAAI,IAAI,IAAI5D,GAAG,CAAC,CAAC,GAAG4D,IAAI,EAAEtC,MAAM,CAAC,CAAC,CAAC;QACjDpB,aAAa,CAAC0D,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACtC,MAAM,GAAGgC;QAAS,CAAC,CAAC,CAAC;MAC1D,CAAC,SAAS;QACRnD,YAAY,CAACoD,OAAO,CAACO,MAAM,CAACxC,MAAM,CAAC;MACrC;MAEA;IACF;;IAEA;IACA,IAAIoC,QAAQ,IAAIC,gBAAgB,IAAIA,gBAAgB,KAAKL,QAAQ,EAAE;MACjE,MAAMe,WAAW,GAAGV,gBAAgB;;MAEpC;MACAjE,QAAQ,CAACV,oBAAoB,CAAC;QAAEsC,MAAM;QAAEgD,YAAY,EAAED,WAAW;QAAEE,UAAU,EAAEjB;MAAS,CAAC,CAAC,CAAC;;MAE3F;MACApD,aAAa,CAAC0D,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACtC,MAAM,GAAGgC;MAAS,CAAC,CAAC,CAAC;MAExD,IAAI;QACF;QACA,MAAM5D,QAAQ,CAACb,QAAQ,CAAC;UAAEyC,MAAM;UAAEgC,QAAQ;UAAEgB,YAAY,EAAED,WAAW;UAAEN,IAAI,EAAE;QAAS,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;QAClG,IAAI/E,aAAa,CAACiF,aAAa,EAAE;UAC/BjF,aAAa,CAACiF,aAAa,CAAC5C,MAAM,EAAEgC,QAAQ,EAAE;YAAES,IAAI,EAAE,QAAQ;YAAEO,YAAY,EAAED;UAAY,CAAC,CAAC;QAC9F;MACF,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C;QACAzE,QAAQ,CAACV,oBAAoB,CAAC;UAAEsC,MAAM;UAAEgD,YAAY,EAAEhB,QAAQ;UAAEiB,UAAU,EAAEF;QAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7FnE,aAAa,CAAC0D,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACtC,MAAM,GAAG+C;QAAY,CAAC,CAAC,CAAC;MAC7D,CAAC,SAAS;QACRlE,YAAY,CAACoD,OAAO,CAACO,MAAM,CAACxC,MAAM,CAAC;MACrC;MAEA;IACF;;IAEA;IACA,IAAI,CAACoC,QAAQ,EAAE;MACb;MACA3D,aAAa,CAAC6D,IAAI,IAAI,IAAI5D,GAAG,CAAC,CAAC,GAAG4D,IAAI,EAAEtC,MAAM,CAAC,CAAC,CAAC;MACjDpB,aAAa,CAAC0D,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACtC,MAAM,GAAGgC;MAAS,CAAC,CAAC,CAAC;;MAExD;MACA5D,QAAQ,CAACZ,uBAAuB,CAAC;QAAEwC,MAAM;QAAEgC;MAAS,CAAC,CAAC,CAAC;MAEvD,IAAI;QACF,MAAMkB,MAAM,GAAG,MAAM9E,QAAQ,CAACb,QAAQ,CAAC;UAAEyC,MAAM;UAAEgC,QAAQ;UAAES,IAAI,EAAE;QAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;QACpF,IAAI/E,aAAa,CAACiF,aAAa,EAAE;UAC/BjF,aAAa,CAACiF,aAAa,CAAC5C,MAAM,EAAEgC,QAAQ,EAAEkB,MAAM,CAAC;QACvD;MACF,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpC;QACAzE,QAAQ,CAACX,uBAAuB,CAAC;UAAEuC,MAAM;UAAEgC;QAAS,CAAC,CAAC,CAAC;QACvDvD,aAAa,CAAC6D,IAAI,IAAI;UACpB,MAAMC,IAAI,GAAG,IAAI7D,GAAG,CAAC4D,IAAI,CAAC;UAC1BC,IAAI,CAACC,MAAM,CAACxC,MAAM,CAAC;UACnB,OAAOuC,IAAI;QACb,CAAC,CAAC;QACF3D,aAAa,CAAC0D,IAAI,IAAI;UACpB,MAAMC,IAAI,GAAG;YAAE,GAAGD;UAAK,CAAC;UACxB,OAAOC,IAAI,CAACvC,MAAM,CAAC;UACnB,OAAOuC,IAAI;QACb,CAAC,CAAC;MACJ,CAAC,SAAS;QACR1D,YAAY,CAACoD,OAAO,CAACO,MAAM,CAACxC,MAAM,CAAC;MACrC;MAEA;IACF;;IAEA;IACAnB,YAAY,CAACoD,OAAO,CAACO,MAAM,CAACxC,MAAM,CAAC;EACrC,CAAC;EAED,MAAMmD,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;IACjD,IAAIA,UAAU,KAAK,CAAC,EAAE,OAAO,CAAC;IAC9B,OAAOC,IAAI,CAACC,KAAK,CAAEH,KAAK,GAAGC,UAAU,GAAI,GAAG,CAAC;EAC/C,CAAC;EAED,MAAMG,UAAU,GAAIlC,IAAI,IAAK;IAC3B,MAAMc,QAAQ,GAAG5D,UAAU,CAAC0D,GAAG,CAACZ,IAAI,CAAC1B,GAAG,CAAC;IACzC,MAAM6D,QAAQ,GAAG9E,UAAU,CAAC2C,IAAI,CAAC1B,GAAG,CAAC;IAErC,oBACE/B,OAAA;MAAoB6F,SAAS,EAAC,kBAAkB;MAAA5C,QAAA,gBAC9CjD,OAAA;QAAK6F,SAAS,EAAC,eAAe;QAAA5C,QAAA,GAC3BO,cAAc,CAACC,IAAI,CAAC,eACrBzD,OAAA;UAAK6F,SAAS,EAAC,WAAW;UAAA5C,QAAA,gBACxBjD,OAAA;YAAM6F,SAAS,EAAC,aAAa;YAAA5C,QAAA,EAC1BQ,IAAI,CAACqC,QAAQ,GAAG,WAAW,GAAG;UAAa;YAAAjC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACPhE,OAAA;YAAM6F,SAAS,EAAC,YAAY;YAAA5C,QAAA,GACzBQ,IAAI,CAAC+B,UAAU,EAAC,OAAK,EAAC/B,IAAI,CAAC+B,UAAU,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE;UAAA;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENhE,OAAA;QAAK6F,SAAS,EAAC,cAAc;QAAA5C,QAAA,EAC1BQ,IAAI,CAACsC,OAAO,CAAC3C,GAAG,CAAE4C,MAAM,IAAK;UAC5B,MAAMC,UAAU,GAAGX,mBAAmB,CAACU,MAAM,CAACT,KAAK,EAAE9B,IAAI,CAAC+B,UAAU,CAAC;UACrE,MAAMU,UAAU,GAAGN,QAAQ,KAAKI,MAAM,CAACjE,GAAG;UAC1C,MAAMoE,SAAS,GAAG1C,IAAI,CAAC+B,UAAU,GAAG,CAAC,IAAIQ,MAAM,CAACT,KAAK,KAAKE,IAAI,CAACW,GAAG,CAAC,GAAG3C,IAAI,CAACsC,OAAO,CAAC3C,GAAG,CAACiD,CAAC,IAAIA,CAAC,CAACd,KAAK,CAAC,CAAC;UAErG,oBACEvF,OAAA;YAEE6F,SAAS,EAAE,eAAetB,QAAQ,GAAG,OAAO,GAAG,EAAE,IAAI2B,UAAU,GAAG,WAAW,GAAG,EAAE,IAAIC,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;YACnHG,OAAO,EAAEA,CAAA,KAAM,CAACtF,YAAY,CAACoD,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC1B,GAAG,CAAC,IAAI0B,IAAI,CAACqC,QAAQ,IAAI5B,UAAU,CAACT,IAAI,CAAC1B,GAAG,EAAEiE,MAAM,CAACjE,GAAG,CAAE;YAAAkB,QAAA,gBAExGjD,OAAA;cAAK6F,SAAS,EAAC,gBAAgB;cAAA5C,QAAA,gBAC7BjD,OAAA;gBAAK6F,SAAS,EAAC,aAAa;gBAAA5C,QAAA,EAAE+C,MAAM,CAAC7C;cAAI;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,EAC/C,CAACO,QAAQ,IAAI/D,QAAQ,CAAC+F,QAAQ,KAAK/F,QAAQ,CAACgG,WAAW,iBACtDxG,OAAA;gBAAK6F,SAAS,EAAC,cAAc;gBAAA5C,QAAA,gBAC3BjD,OAAA;kBAAM6F,SAAS,EAAC,YAAY;kBAAA5C,QAAA,EAAE+C,MAAM,CAACT;gBAAK;kBAAA1B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAClDhE,OAAA;kBAAM6F,SAAS,EAAC,YAAY;kBAAA5C,QAAA,GAAEgD,UAAU,EAAC,GAAC;gBAAA;kBAAApC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,EAEL,CAACO,QAAQ,IAAI/D,QAAQ,CAAC+F,QAAQ,KAAK/F,QAAQ,CAACgG,WAAW,iBACtDxG,OAAA;cAAK6F,SAAS,EAAC,UAAU;cAAA5C,QAAA,eACvBjD,OAAA;gBACE6F,SAAS,EAAC,WAAW;gBACrBY,KAAK,EAAE;kBAAEC,KAAK,EAAE,GAAGT,UAAU;gBAAI;cAAE;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CACN,EAEAkC,UAAU,iBACTlG,OAAA;cAAK6F,SAAS,EAAC,qBAAqB;cAAA5C,QAAA,EAAC;YAAC;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAC5C;UAAA,GAzBIgC,MAAM,CAACjE,GAAG;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA0BZ,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAELO,QAAQ,iBACPvE,OAAA;QAAK6F,SAAS,EAAC,eAAe;QAAA5C,QAAA,eAC5BjD,OAAA;UAAAiD,QAAA,EAAG;QAAqB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACN;IAAA,GAxDOP,IAAI,CAAC1B,GAAG;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAyDb,CAAC;EAEV,CAAC;EAED,IAAI3D,gBAAgB,EAAE;IACpB,oBACEL,OAAA;MAAK6F,SAAS,EAAC,+BAA+B;MAAA5C,QAAA,EAC3CpB,UAAU,gBACT7B,OAAA;QAAK6F,SAAS,EAAC,sBAAsB;QAAA5C,QAAA,EAClC0C,UAAU,CAAC9D,UAAU;MAAC;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,gBAENhE,OAAA;QAAK6F,SAAS,EAAC,0BAA0B;QAAA5C,QAAA,gBACvCjD,OAAA;UAAAiD,QAAA,EAAI;QAAgB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBhE,OAAA;UAAAiD,QAAA,EAAG;QAAuC;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;EAEA,oBACEhE,OAAA;IAAK6F,SAAS,EAAC,aAAa;IAAA5C,QAAA,gBAC1BjD,OAAA;MAAK6F,SAAS,EAAC,oBAAoB;MAAA5C,QAAA,gBACjCjD,OAAA;QAAAiD,QAAA,EAAI;MAAW;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBhE,OAAA;QAAK6F,SAAS,EAAC,eAAe;QAAA5C,QAAA,eAC5BjD,OAAA;UACE2G,KAAK,EAAE,CAAA9E,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEE,GAAG,KAAI,EAAG;UAC7B6E,QAAQ,EAAGC,CAAC,IAAK;YACf,MAAMpD,IAAI,GAAGvD,KAAK,CAAC8B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACF,GAAG,KAAK8E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;YACtDvG,YAAY,CAACqD,IAAI,CAAC;UACpB,CAAE;UACFoC,SAAS,EAAC,aAAa;UAAA5C,QAAA,gBAEvBjD,OAAA;YAAQ2G,KAAK,EAAC,EAAE;YAAA1D,QAAA,EAAC;UAAgB;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACzC9D,KAAK,CAACkD,GAAG,CAACK,IAAI,iBACbzD,OAAA;YAAuB2G,KAAK,EAAElD,IAAI,CAAC1B,GAAI;YAAAkB,QAAA,EACpCT,yBAAyB,CAACiB,IAAI,CAACQ,QAAQ;UAAC,GAD9BR,IAAI,CAAC1B,GAAG;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENhE,OAAA;MAAK6F,SAAS,EAAC,qBAAqB;MAAA5C,QAAA,EACjCpB,UAAU,GACT8D,UAAU,CAAC9D,UAAU,CAAC,gBAEtB7B,OAAA;QAAK6F,SAAS,EAAC,kBAAkB;QAAA5C,QAAA,gBAC/BjD,OAAA;UAAAiD,QAAA,EAAI;QAAgB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBhE,OAAA;UAAAiD,QAAA,EAAG;QAAqD;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAEL9D,KAAK,CAAC6G,MAAM,GAAG,CAAC,iBACf/G,OAAA;MAAK6F,SAAS,EAAC,gBAAgB;MAAA5C,QAAA,gBAC7BjD,OAAA;QAAAiD,QAAA,EAAI;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBhE,OAAA;QAAK6F,SAAS,EAAC,gBAAgB;QAAA5C,QAAA,EAC5B/C,KAAK,CAACkD,GAAG,CAACK,IAAI,iBACbzD,OAAA;UAEE6F,SAAS,EAAE,kBAAkB,CAAAhE,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEE,GAAG,MAAK0B,IAAI,CAAC1B,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC5EuE,OAAO,EAAEA,CAAA,KAAMlG,YAAY,CAACqD,IAAI,CAAE;UAAAR,QAAA,gBAElCjD,OAAA;YAAM6F,SAAS,EAAC,iBAAiB;YAAA5C,QAAA,EAC9BT,yBAAyB,CAACiB,IAAI,CAACQ,QAAQ;UAAC;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACPhE,OAAA;YAAM6F,SAAS,EAAC,iBAAiB;YAAA5C,QAAA,GAC9BQ,IAAI,CAAC+B,UAAU,EAAC,QACnB;UAAA;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GATFP,IAAI,CAAC1B,GAAG;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1D,EAAA,CAzVIL,UAAU;EAAA,QACGV,WAAW,EACPE,cAAc,EACXD,WAAW;AAAA;AAAAwH,EAAA,GAH/B/G,UAAU;AA2VhB,eAAeA,UAAU;AAAC,IAAA+G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}