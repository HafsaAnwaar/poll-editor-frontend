{"ast":null,"code":"var _jsxFileName = \"D:\\\\server\\\\poll-editor\\\\src\\\\components\\\\PollViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { usePollContext } from '../context/PollContext';\nimport { votePoll, undoVote, incrementVoteOptimistic, decrementVoteOptimistic } from '../redux/pollsSlice';\nimport socketService from '../socket/socket';\nimport './PollViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollViewer = ({\n  polls,\n  selectedPoll,\n  onPollSelect,\n  presentationMode = false\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    settings\n  } = usePollContext();\n  const {\n    currentPoll\n  } = useSelector(state => state.polls);\n  const [votedPolls, setVotedPolls] = useState(new Set());\n  const [localVotes, setLocalVotes] = useState({});\n  const voteGuardRef = useRef(new Set());\n\n  // Persist vote state locally to prevent multi-voting across reloads\n  useEffect(() => {\n    try {\n      const storedVoted = JSON.parse(localStorage.getItem('votedPolls') || '[]');\n      const storedVotes = JSON.parse(localStorage.getItem('localVotes') || '{}');\n      if (Array.isArray(storedVoted)) {\n        setVotedPolls(new Set(storedVoted));\n      }\n      if (storedVotes && typeof storedVotes === 'object') {\n        setLocalVotes(storedVotes);\n      }\n    } catch (_) {\n      // ignore corrupted storage\n    }\n  }, []);\n  useEffect(() => {\n    try {\n      localStorage.setItem('votedPolls', JSON.stringify(Array.from(votedPolls)));\n    } catch (_) {}\n  }, [votedPolls]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('localVotes', JSON.stringify(localVotes));\n    } catch (_) {}\n  }, [localVotes]);\n\n  // Always derive the active poll fresh from the Redux store by id so updates reflect immediately\n  const activePoll = useMemo(() => {\n    const selectedId = (selectedPoll === null || selectedPoll === void 0 ? void 0 : selectedPoll._id) || (currentPoll === null || currentPoll === void 0 ? void 0 : currentPoll._id);\n    if (!selectedId) return null;\n    return polls.find(p => p._id === selectedId) || null;\n  }, [polls, selectedPoll, currentPoll]);\n  useEffect(() => {\n    // Listen for vote updates from WebSocket\n    socketService.onVoteUpdate(({\n      pollId,\n      updatedPoll\n    }) => {\n      if (updatedPoll) {\n        dispatch({\n          type: 'polls/updatePollInStore',\n          payload: updatedPoll\n        });\n      }\n    });\n    socketService.onUndoVote(({\n      pollId,\n      updatedPoll\n    }) => {\n      if (updatedPoll) {\n        dispatch({\n          type: 'polls/updatePollInStore',\n          payload: updatedPoll\n        });\n      }\n    });\n    return () => {\n      socketService.off('vote_update');\n      socketService.off('undo_vote');\n    };\n  }, [dispatch]);\n  const extractPlainFromMaybeJson = str => {\n    if (!str) return '';\n    const trimmed = String(str).trim();\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\n      try {\n        var _json$root;\n        const json = JSON.parse(trimmed);\n        const children = (json === null || json === void 0 ? void 0 : (_json$root = json.root) === null || _json$root === void 0 ? void 0 : _json$root.children) || [];\n        const text = children.map(node => Array.isArray(node.children) ? node.children.map(c => c.text || '').join('') : '').join(' ').trim();\n        return text || 'Untitled Poll';\n      } catch (_) {\n        return 'Untitled Poll';\n      }\n    }\n    return trimmed || 'Untitled Poll';\n  };\n  const renderQuestion = poll => {\n    if (poll.questionHtml) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        dangerouslySetInnerHTML: {\n          __html: poll.questionHtml\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: extractPlainFromMaybeJson(poll.question)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  };\n  const handleVote = async (pollId, optionId) => {\n    // Synchronous re-entrancy guard to prevent rapid double-clicks\n    if (voteGuardRef.current.has(pollId)) return;\n    voteGuardRef.current.add(pollId);\n    const hasVoted = votedPolls.has(pollId);\n    const isSameOption = localVotes[pollId] === optionId;\n    if (hasVoted && isSameOption) {\n      // Undo vote\n      setVotedPolls(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(pollId);\n        return newSet;\n      });\n      setLocalVotes(prev => {\n        const newVotes = {\n          ...prev\n        };\n        delete newVotes[pollId];\n        return newVotes;\n      });\n\n      // Optimistic UI update for undo\n      dispatch(decrementVoteOptimistic({\n        pollId,\n        optionId\n      }));\n      try {\n        const result = await dispatch(undoVote({\n          pollId,\n          optionId\n        })).unwrap();\n        // Broadcast undo via WebSocket\n        socketService.broadcastUndoVote(pollId, optionId, result);\n      } catch (error) {\n        console.error('Undo vote failed:', error);\n        // If server undo fails, release guard so user can retry\n        voteGuardRef.current.delete(pollId);\n        return;\n      }\n    } else if (!hasVoted) {\n      // Mark as voted immediately and record selection\n      setVotedPolls(prev => new Set([...prev, pollId]));\n      setLocalVotes(prev => ({\n        ...prev,\n        [pollId]: optionId\n      }));\n\n      // Optimistic UI update\n      dispatch(incrementVoteOptimistic({\n        pollId,\n        optionId\n      }));\n      try {\n        const result = await dispatch(votePoll({\n          pollId,\n          optionId\n        })).unwrap();\n        // Broadcast vote via WebSocket\n        socketService.broadcastVote(pollId, optionId, result);\n      } catch (error) {\n        console.error('Vote failed:', error);\n        // If server vote fails, release guard so user can retry\n        voteGuardRef.current.delete(pollId);\n        return;\n      }\n    } else {\n      // If voted but different option, do nothing (prevents switching votes)\n      voteGuardRef.current.delete(pollId);\n      return;\n    }\n    voteGuardRef.current.delete(pollId);\n  };\n  const calculatePercentage = (votes, totalVotes) => {\n    if (totalVotes === 0) return 0;\n    return Math.round(votes / totalVotes * 100);\n  };\n  const renderPoll = poll => {\n    const hasVoted = votedPolls.has(poll._id);\n    const userVote = localVotes[poll._id];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-question\",\n        children: [renderQuestion(poll), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-status\",\n            children: poll.isActive ? 'ðŸŸ¢ Active' : 'ðŸ”´ Inactive'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-votes\",\n            children: [poll.totalVotes, \" vote\", poll.totalVotes !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-options\",\n        children: poll.options.map(option => {\n          const percentage = calculatePercentage(option.votes, poll.totalVotes);\n          const isUserVote = userVote === option._id;\n          const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''}`,\n            onClick: () => poll.isActive && handleVote(poll._id, option._id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-text\",\n                children: option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), (hasVoted || settings.liveMode) && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"vote-count\",\n                  children: option.votes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"percentage\",\n                  children: [percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), (hasVoted || settings.liveMode) && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vote-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-fill\",\n                style: {\n                  width: `${percentage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), isUserVote && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-vote-indicator\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)]\n          }, option._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-feedback\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thanks for voting! \\uD83C\\uDF89 Click your option again to undo.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, poll._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  };\n  if (presentationMode) {\n    // Full-screen presentation mode\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer presentation-mode\",\n      children: activePoll ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-content\",\n        children: renderPoll(activePoll)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a poll to start the presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Poll Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) || '',\n          onChange: e => {\n            const poll = polls.find(p => p._id === e.target.value);\n            onPollSelect(poll);\n          },\n          className: \"poll-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a poll...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: poll._id,\n            children: extractPlainFromMaybeJson(poll.question)\n          }, poll._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-content\",\n      children: activePoll ? renderPoll(activePoll) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-poll-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a poll from the dropdown above to start voting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), polls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list-mini\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-poll-list\",\n        children: polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mini-poll-item ${(activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) === poll._id ? 'active' : ''}`,\n          onClick: () => onPollSelect(poll),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-title\",\n            children: extractPlainFromMaybeJson(poll.question)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-votes\",\n            children: [poll.totalVotes, \" votes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)]\n        }, poll._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(PollViewer, \"IjphX+8DrSKUZ/6CQn/0t8/K7i0=\", false, function () {\n  return [useDispatch, usePollContext, useSelector];\n});\n_c = PollViewer;\nexport default PollViewer;\nvar _c;\n$RefreshReg$(_c, \"PollViewer\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","useDispatch","useSelector","usePollContext","votePoll","undoVote","incrementVoteOptimistic","decrementVoteOptimistic","socketService","jsxDEV","_jsxDEV","PollViewer","polls","selectedPoll","onPollSelect","presentationMode","_s","dispatch","settings","currentPoll","state","votedPolls","setVotedPolls","Set","localVotes","setLocalVotes","voteGuardRef","storedVoted","JSON","parse","localStorage","getItem","storedVotes","Array","isArray","_","setItem","stringify","from","activePoll","selectedId","_id","find","p","onVoteUpdate","pollId","updatedPoll","type","payload","onUndoVote","off","extractPlainFromMaybeJson","str","trimmed","String","trim","startsWith","includes","_json$root","json","children","root","text","map","node","c","join","renderQuestion","poll","questionHtml","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","question","handleVote","optionId","current","has","add","hasVoted","isSameOption","prev","newSet","delete","newVotes","result","unwrap","broadcastUndoVote","error","console","broadcastVote","calculatePercentage","votes","totalVotes","Math","round","renderPoll","userVote","className","isActive","options","option","percentage","isUserVote","isWinning","max","o","onClick","liveMode","showResults","style","width","value","onChange","e","target","length","_c","$RefreshReg$"],"sources":["D:/server/poll-editor/src/components/PollViewer.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { usePollContext } from '../context/PollContext';\r\nimport { votePoll, undoVote, incrementVoteOptimistic, decrementVoteOptimistic } from '../redux/pollsSlice';\r\nimport socketService from '../socket/socket';\r\nimport './PollViewer.css';\r\n\r\nconst PollViewer = ({ polls, selectedPoll, onPollSelect, presentationMode = false }) => {\r\n  const dispatch = useDispatch();\r\n  const { settings } = usePollContext();\r\n  const { currentPoll } = useSelector(state => state.polls);\r\n  \r\n  const [votedPolls, setVotedPolls] = useState(new Set());\r\n  const [localVotes, setLocalVotes] = useState({});\r\n  const voteGuardRef = useRef(new Set());\r\n\r\n  // Persist vote state locally to prevent multi-voting across reloads\r\n  useEffect(() => {\r\n    try {\r\n      const storedVoted = JSON.parse(localStorage.getItem('votedPolls') || '[]');\r\n      const storedVotes = JSON.parse(localStorage.getItem('localVotes') || '{}');\r\n      if (Array.isArray(storedVoted)) {\r\n        setVotedPolls(new Set(storedVoted));\r\n      }\r\n      if (storedVotes && typeof storedVotes === 'object') {\r\n        setLocalVotes(storedVotes);\r\n      }\r\n    } catch (_) {\r\n      // ignore corrupted storage\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('votedPolls', JSON.stringify(Array.from(votedPolls)));\r\n    } catch (_) {}\r\n  }, [votedPolls]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('localVotes', JSON.stringify(localVotes));\r\n    } catch (_) {}\r\n  }, [localVotes]);\r\n\r\n  // Always derive the active poll fresh from the Redux store by id so updates reflect immediately\r\n  const activePoll = useMemo(() => {\r\n    const selectedId = selectedPoll?._id || currentPoll?._id;\r\n    if (!selectedId) return null;\r\n    return polls.find(p => p._id === selectedId) || null;\r\n  }, [polls, selectedPoll, currentPoll]);\r\n\r\n  useEffect(() => {\r\n    // Listen for vote updates from WebSocket\r\n    socketService.onVoteUpdate(({ pollId, updatedPoll }) => {\r\n      if (updatedPoll) {\r\n        dispatch({ type: 'polls/updatePollInStore', payload: updatedPoll });\r\n      }\r\n    });\r\n    socketService.onUndoVote(({ pollId, updatedPoll }) => {\r\n      if (updatedPoll) {\r\n        dispatch({ type: 'polls/updatePollInStore', payload: updatedPoll });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socketService.off('vote_update');\r\n      socketService.off('undo_vote');\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const extractPlainFromMaybeJson = (str) => {\r\n    if (!str) return '';\r\n    const trimmed = String(str).trim();\r\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\r\n      try {\r\n        const json = JSON.parse(trimmed);\r\n        const children = json?.root?.children || [];\r\n        const text = children\r\n          .map((node) => Array.isArray(node.children) ? node.children.map((c) => c.text || '').join('') : '')\r\n          .join(' ')\r\n          .trim();\r\n        return text || 'Untitled Poll';\r\n      } catch (_) {\r\n        return 'Untitled Poll';\r\n      }\r\n    }\r\n    return trimmed || 'Untitled Poll';\r\n  };\r\n\r\n  const renderQuestion = (poll) => {\r\n    if (poll.questionHtml) {\r\n      return <h2 dangerouslySetInnerHTML={{ __html: poll.questionHtml }} />;\r\n    }\r\n    return <h2>{extractPlainFromMaybeJson(poll.question)}</h2>;\r\n  };\r\n\r\n  const handleVote = async (pollId, optionId) => {\r\n    // Synchronous re-entrancy guard to prevent rapid double-clicks\r\n    if (voteGuardRef.current.has(pollId)) return;\r\n    voteGuardRef.current.add(pollId);\r\n\r\n    const hasVoted = votedPolls.has(pollId);\r\n    const isSameOption = localVotes[pollId] === optionId;\r\n\r\n    if (hasVoted && isSameOption) {\r\n      // Undo vote\r\n      setVotedPolls(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(pollId);\r\n        return newSet;\r\n      });\r\n      setLocalVotes(prev => {\r\n        const newVotes = { ...prev };\r\n        delete newVotes[pollId];\r\n        return newVotes;\r\n      });\r\n\r\n      // Optimistic UI update for undo\r\n      dispatch(decrementVoteOptimistic({ pollId, optionId }));\r\n\r\n      try {\r\n        const result = await dispatch(undoVote({ pollId, optionId })).unwrap();\r\n        // Broadcast undo via WebSocket\r\n        socketService.broadcastUndoVote(pollId, optionId, result);\r\n      } catch (error) {\r\n        console.error('Undo vote failed:', error);\r\n        // If server undo fails, release guard so user can retry\r\n        voteGuardRef.current.delete(pollId);\r\n        return;\r\n      }\r\n    } else if (!hasVoted) {\r\n      // Mark as voted immediately and record selection\r\n      setVotedPolls(prev => new Set([...prev, pollId]));\r\n      setLocalVotes(prev => ({ ...prev, [pollId]: optionId }));\r\n\r\n      // Optimistic UI update\r\n      dispatch(incrementVoteOptimistic({ pollId, optionId }));\r\n\r\n      try {\r\n        const result = await dispatch(votePoll({ pollId, optionId })).unwrap();\r\n        // Broadcast vote via WebSocket\r\n        socketService.broadcastVote(pollId, optionId, result);\r\n      } catch (error) {\r\n        console.error('Vote failed:', error);\r\n        // If server vote fails, release guard so user can retry\r\n        voteGuardRef.current.delete(pollId);\r\n        return;\r\n      }\r\n    } else {\r\n      // If voted but different option, do nothing (prevents switching votes)\r\n      voteGuardRef.current.delete(pollId);\r\n      return;\r\n    }\r\n\r\n    voteGuardRef.current.delete(pollId);\r\n  };\r\n\r\n  const calculatePercentage = (votes, totalVotes) => {\r\n    if (totalVotes === 0) return 0;\r\n    return Math.round((votes / totalVotes) * 100);\r\n  };\r\n\r\n  const renderPoll = (poll) => {\r\n    const hasVoted = votedPolls.has(poll._id);\r\n    const userVote = localVotes[poll._id];\r\n\r\n    return (\r\n      <div key={poll._id} className=\"poll-viewer-card\">\r\n        <div className=\"poll-question\">\r\n          {renderQuestion(poll)}\r\n          <div className=\"poll-meta\">\r\n            <span className=\"poll-status\">\r\n              {poll.isActive ? 'ðŸŸ¢ Active' : 'ðŸ”´ Inactive'}\r\n            </span>\r\n            <span className=\"poll-votes\">\r\n              {poll.totalVotes} vote{poll.totalVotes !== 1 ? 's' : ''}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"poll-options\">\r\n          {poll.options.map((option) => {\r\n            const percentage = calculatePercentage(option.votes, poll.totalVotes);\r\n            const isUserVote = userVote === option._id;\r\n            const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\r\n\r\n            return (\r\n              <div\r\n                key={option._id}\r\n                className={`poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''}`}\r\n                onClick={() => poll.isActive && handleVote(poll._id, option._id)}\r\n              >\r\n                <div className=\"option-content\">\r\n                  <div className=\"option-text\">{option.text}</div>\r\n                  {(hasVoted || settings.liveMode) && settings.showResults && (\r\n                    <div className=\"option-stats\">\r\n                      <span className=\"vote-count\">{option.votes}</span>\r\n                      <span className=\"percentage\">{percentage}%</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {(hasVoted || settings.liveMode) && settings.showResults && (\r\n                  <div className=\"vote-bar\">\r\n                    <div \r\n                      className=\"vote-fill\"\r\n                      style={{ width: `${percentage}%` }}\r\n                    ></div>\r\n                  </div>\r\n                )}\r\n                \r\n                {isUserVote && (\r\n                  <div className=\"user-vote-indicator\">âœ“</div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {hasVoted && (\r\n          <div className=\"vote-feedback\">\r\n            <p>Thanks for voting! ðŸŽ‰ Click your option again to undo.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (presentationMode) {\r\n    // Full-screen presentation mode\r\n    return (\r\n      <div className=\"poll-viewer presentation-mode\">\r\n        {activePoll ? (\r\n          <div className=\"presentation-content\">\r\n            {renderPoll(activePoll)}\r\n          </div>\r\n        ) : (\r\n          <div className=\"presentation-placeholder\">\r\n            <h1>No poll selected</h1>\r\n            <p>Select a poll to start the presentation</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"poll-viewer\">\r\n      <div className=\"poll-viewer-header\">\r\n        <h1>Poll Viewer</h1>\r\n        <div className=\"poll-selector\">\r\n          <select \r\n            value={activePoll?._id || ''} \r\n            onChange={(e) => {\r\n              const poll = polls.find(p => p._id === e.target.value);\r\n              onPollSelect(poll);\r\n            }}\r\n            className=\"poll-select\"\r\n          >\r\n            <option value=\"\">Select a poll...</option>\r\n            {polls.map(poll => (\r\n              <option key={poll._id} value={poll._id}>\r\n                {extractPlainFromMaybeJson(poll.question)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"poll-viewer-content\">\r\n        {activePoll ? (\r\n          renderPoll(activePoll)\r\n        ) : (\r\n          <div className=\"no-poll-selected\">\r\n            <h2>No poll selected</h2>\r\n            <p>Choose a poll from the dropdown above to start voting</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {polls.length > 0 && (\r\n        <div className=\"poll-list-mini\">\r\n          <h3>All Polls</h3>\r\n          <div className=\"mini-poll-list\">\r\n            {polls.map(poll => (\r\n              <div\r\n                key={poll._id}\r\n                className={`mini-poll-item ${activePoll?._id === poll._id ? 'active' : ''}`}\r\n                onClick={() => onPollSelect(poll)}\r\n              >\r\n                <span className=\"mini-poll-title\">\r\n                  {extractPlainFromMaybeJson(poll.question)}\r\n                </span>\r\n                <span className=\"mini-poll-votes\">\r\n                  {poll.totalVotes} votes\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}