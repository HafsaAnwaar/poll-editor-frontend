{"ast":null,"code":"var _jsxFileName = \"D:\\\\server\\\\poll-editor\\\\src\\\\components\\\\PollViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { usePollContext } from '../context/PollContext';\nimport { votePoll, incrementVoteOptimistic } from '../redux/pollsSlice';\nimport socketService from '../socket/socket';\nimport './PollViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollViewer = ({\n  polls,\n  selectedPoll,\n  onPollSelect,\n  presentationMode = false\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    settings\n  } = usePollContext();\n  const {\n    currentPoll\n  } = useSelector(state => state.polls);\n  const [votedPolls, setVotedPolls] = useState(new Set());\n  const [localVotes, setLocalVotes] = useState({});\n\n  // Persist vote state locally to prevent multi-voting across reloads\n  useEffect(() => {\n    try {\n      const storedVoted = JSON.parse(localStorage.getItem('votedPolls') || '[]');\n      const storedVotes = JSON.parse(localStorage.getItem('localVotes') || '{}');\n      if (Array.isArray(storedVoted)) {\n        setVotedPolls(new Set(storedVoted));\n      }\n      if (storedVotes && typeof storedVotes === 'object') {\n        setLocalVotes(storedVotes);\n      }\n    } catch (_) {\n      // ignore corrupted storage\n    }\n  }, []);\n  useEffect(() => {\n    try {\n      localStorage.setItem('votedPolls', JSON.stringify(Array.from(votedPolls)));\n    } catch (_) {}\n  }, [votedPolls]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('localVotes', JSON.stringify(localVotes));\n    } catch (_) {}\n  }, [localVotes]);\n\n  // Always derive the active poll fresh from the Redux store by id so updates reflect immediately\n  const activePoll = useMemo(() => {\n    const selectedId = (selectedPoll === null || selectedPoll === void 0 ? void 0 : selectedPoll._id) || (currentPoll === null || currentPoll === void 0 ? void 0 : currentPoll._id);\n    if (!selectedId) return null;\n    return polls.find(p => p._id === selectedId) || null;\n  }, [polls, selectedPoll, currentPoll]);\n  useEffect(() => {\n    // Listen for vote updates from WebSocket\n    socketService.onVoteUpdate(({\n      pollId,\n      updatedPoll\n    }) => {\n      if (updatedPoll) {\n        dispatch({\n          type: 'polls/updatePollInStore',\n          payload: updatedPoll\n        });\n      }\n    });\n    return () => {\n      socketService.off('vote_update');\n    };\n  }, [dispatch]);\n  const extractPlainFromMaybeJson = str => {\n    if (!str) return '';\n    const trimmed = String(str).trim();\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\n      try {\n        var _json$root;\n        const json = JSON.parse(trimmed);\n        const children = (json === null || json === void 0 ? void 0 : (_json$root = json.root) === null || _json$root === void 0 ? void 0 : _json$root.children) || [];\n        const text = children.map(node => Array.isArray(node.children) ? node.children.map(c => c.text || '').join('') : '').join(' ').trim();\n        return text || 'Untitled Poll';\n      } catch (_) {\n        return 'Untitled Poll';\n      }\n    }\n    return trimmed || 'Untitled Poll';\n  };\n  const renderQuestion = poll => {\n    if (poll.questionHtml) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        dangerouslySetInnerHTML: {\n          __html: poll.questionHtml\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: extractPlainFromMaybeJson(poll.question)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  };\n  const handleVote = async (pollId, optionId) => {\n    if (votedPolls.has(pollId)) {\n      return; // Already voted\n    }\n\n    // Mark as voted immediately and record selection\n    setVotedPolls(prev => new Set([...prev, pollId]));\n    setLocalVotes(prev => ({\n      ...prev,\n      [pollId]: optionId\n    }));\n\n    // Optimistic UI update\n    dispatch(incrementVoteOptimistic({\n      pollId,\n      optionId\n    }));\n    try {\n      const result = await dispatch(votePoll({\n        pollId,\n        optionId\n      })).unwrap();\n      // Broadcast vote via WebSocket\n      socketService.broadcastVote(pollId, optionId, result);\n    } catch (error) {\n      console.error('Vote failed:', error);\n    }\n  };\n  const calculatePercentage = (votes, totalVotes) => {\n    if (totalVotes === 0) return 0;\n    return Math.round(votes / totalVotes * 100);\n  };\n  const renderPoll = poll => {\n    const hasVoted = votedPolls.has(poll._id);\n    const userVote = localVotes[poll._id];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-question\",\n        children: [renderQuestion(poll), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-status\",\n            children: poll.isActive ? 'ðŸŸ¢ Active' : 'ðŸ”´ Inactive'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-votes\",\n            children: [poll.totalVotes, \" vote\", poll.totalVotes !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-options\",\n        children: poll.options.map(option => {\n          const percentage = calculatePercentage(option.votes, poll.totalVotes);\n          const isUserVote = userVote === option._id;\n          const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''}`,\n            onClick: () => !hasVoted && poll.isActive && handleVote(poll._id, option._id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-text\",\n                children: option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), (hasVoted || settings.liveMode) && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"vote-count\",\n                  children: option.votes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"percentage\",\n                  children: [percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), (hasVoted || settings.liveMode) && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vote-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-fill\",\n                style: {\n                  width: `${percentage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), isUserVote && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-vote-indicator\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)]\n          }, option._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-feedback\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thanks for voting! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, poll._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  };\n  if (presentationMode) {\n    // Full-screen presentation mode\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer presentation-mode\",\n      children: activePoll ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-content\",\n        children: renderPoll(activePoll)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a poll to start the presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Poll Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) || '',\n          onChange: e => {\n            const poll = polls.find(p => p._id === e.target.value);\n            onPollSelect(poll);\n          },\n          className: \"poll-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a poll...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: poll._id,\n            children: extractPlainFromMaybeJson(poll.question)\n          }, poll._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-content\",\n      children: activePoll ? renderPoll(activePoll) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-poll-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a poll from the dropdown above to start voting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), polls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list-mini\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-poll-list\",\n        children: polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mini-poll-item ${(activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) === poll._id ? 'active' : ''}`,\n          onClick: () => onPollSelect(poll),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-title\",\n            children: extractPlainFromMaybeJson(poll.question)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-votes\",\n            children: [poll.totalVotes, \" votes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this)]\n        }, poll._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(PollViewer, \"yQFyx5nOeMEsPpn2b+MSA0sZI8A=\", false, function () {\n  return [useDispatch, usePollContext, useSelector];\n});\n_c = PollViewer;\nexport default PollViewer;\nvar _c;\n$RefreshReg$(_c, \"PollViewer\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useDispatch","useSelector","usePollContext","votePoll","incrementVoteOptimistic","socketService","jsxDEV","_jsxDEV","PollViewer","polls","selectedPoll","onPollSelect","presentationMode","_s","dispatch","settings","currentPoll","state","votedPolls","setVotedPolls","Set","localVotes","setLocalVotes","storedVoted","JSON","parse","localStorage","getItem","storedVotes","Array","isArray","_","setItem","stringify","from","activePoll","selectedId","_id","find","p","onVoteUpdate","pollId","updatedPoll","type","payload","off","extractPlainFromMaybeJson","str","trimmed","String","trim","startsWith","includes","_json$root","json","children","root","text","map","node","c","join","renderQuestion","poll","questionHtml","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","question","handleVote","optionId","has","prev","result","unwrap","broadcastVote","error","console","calculatePercentage","votes","totalVotes","Math","round","renderPoll","hasVoted","userVote","className","isActive","options","option","percentage","isUserVote","isWinning","max","o","onClick","liveMode","showResults","style","width","value","onChange","e","target","length","_c","$RefreshReg$"],"sources":["D:/server/poll-editor/src/components/PollViewer.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { usePollContext } from '../context/PollContext';\r\nimport { votePoll, incrementVoteOptimistic } from '../redux/pollsSlice';\r\nimport socketService from '../socket/socket';\r\nimport './PollViewer.css';\r\n\r\nconst PollViewer = ({ polls, selectedPoll, onPollSelect, presentationMode = false }) => {\r\n  const dispatch = useDispatch();\r\n  const { settings } = usePollContext();\r\n  const { currentPoll } = useSelector(state => state.polls);\r\n  \r\n  const [votedPolls, setVotedPolls] = useState(new Set());\r\n  const [localVotes, setLocalVotes] = useState({});\r\n\r\n  // Persist vote state locally to prevent multi-voting across reloads\r\n  useEffect(() => {\r\n    try {\r\n      const storedVoted = JSON.parse(localStorage.getItem('votedPolls') || '[]');\r\n      const storedVotes = JSON.parse(localStorage.getItem('localVotes') || '{}');\r\n      if (Array.isArray(storedVoted)) {\r\n        setVotedPolls(new Set(storedVoted));\r\n      }\r\n      if (storedVotes && typeof storedVotes === 'object') {\r\n        setLocalVotes(storedVotes);\r\n      }\r\n    } catch (_) {\r\n      // ignore corrupted storage\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('votedPolls', JSON.stringify(Array.from(votedPolls)));\r\n    } catch (_) {}\r\n  }, [votedPolls]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('localVotes', JSON.stringify(localVotes));\r\n    } catch (_) {}\r\n  }, [localVotes]);\r\n\r\n  // Always derive the active poll fresh from the Redux store by id so updates reflect immediately\r\n  const activePoll = useMemo(() => {\r\n    const selectedId = selectedPoll?._id || currentPoll?._id;\r\n    if (!selectedId) return null;\r\n    return polls.find(p => p._id === selectedId) || null;\r\n  }, [polls, selectedPoll, currentPoll]);\r\n\r\n  useEffect(() => {\r\n    // Listen for vote updates from WebSocket\r\n    socketService.onVoteUpdate(({ pollId, updatedPoll }) => {\r\n      if (updatedPoll) {\r\n        dispatch({ type: 'polls/updatePollInStore', payload: updatedPoll });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socketService.off('vote_update');\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const extractPlainFromMaybeJson = (str) => {\r\n    if (!str) return '';\r\n    const trimmed = String(str).trim();\r\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\r\n      try {\r\n        const json = JSON.parse(trimmed);\r\n        const children = json?.root?.children || [];\r\n        const text = children\r\n          .map((node) => Array.isArray(node.children) ? node.children.map((c) => c.text || '').join('') : '')\r\n          .join(' ')\r\n          .trim();\r\n        return text || 'Untitled Poll';\r\n      } catch (_) {\r\n        return 'Untitled Poll';\r\n      }\r\n    }\r\n    return trimmed || 'Untitled Poll';\r\n  };\r\n\r\n  const renderQuestion = (poll) => {\r\n    if (poll.questionHtml) {\r\n      return <h2 dangerouslySetInnerHTML={{ __html: poll.questionHtml }} />;\r\n    }\r\n    return <h2>{extractPlainFromMaybeJson(poll.question)}</h2>;\r\n  };\r\n\r\n  const handleVote = async (pollId, optionId) => {\r\n    if (votedPolls.has(pollId)) {\r\n      return; // Already voted\r\n    }\r\n\r\n    // Mark as voted immediately and record selection\r\n    setVotedPolls(prev => new Set([...prev, pollId]));\r\n    setLocalVotes(prev => ({ ...prev, [pollId]: optionId }));\r\n\r\n    // Optimistic UI update\r\n    dispatch(incrementVoteOptimistic({ pollId, optionId }));\r\n\r\n    try {\r\n      const result = await dispatch(votePoll({ pollId, optionId })).unwrap();\r\n      // Broadcast vote via WebSocket\r\n      socketService.broadcastVote(pollId, optionId, result);\r\n    } catch (error) {\r\n      console.error('Vote failed:', error);\r\n    }\r\n  };\r\n\r\n  const calculatePercentage = (votes, totalVotes) => {\r\n    if (totalVotes === 0) return 0;\r\n    return Math.round((votes / totalVotes) * 100);\r\n  };\r\n\r\n  const renderPoll = (poll) => {\r\n    const hasVoted = votedPolls.has(poll._id);\r\n    const userVote = localVotes[poll._id];\r\n\r\n    return (\r\n      <div key={poll._id} className=\"poll-viewer-card\">\r\n        <div className=\"poll-question\">\r\n          {renderQuestion(poll)}\r\n          <div className=\"poll-meta\">\r\n            <span className=\"poll-status\">\r\n              {poll.isActive ? 'ðŸŸ¢ Active' : 'ðŸ”´ Inactive'}\r\n            </span>\r\n            <span className=\"poll-votes\">\r\n              {poll.totalVotes} vote{poll.totalVotes !== 1 ? 's' : ''}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"poll-options\">\r\n          {poll.options.map((option) => {\r\n            const percentage = calculatePercentage(option.votes, poll.totalVotes);\r\n            const isUserVote = userVote === option._id;\r\n            const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\r\n\r\n            return (\r\n              <div\r\n                key={option._id}\r\n                className={`poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''}`}\r\n                onClick={() => !hasVoted && poll.isActive && handleVote(poll._id, option._id)}\r\n              >\r\n                <div className=\"option-content\">\r\n                  <div className=\"option-text\">{option.text}</div>\r\n                  {(hasVoted || settings.liveMode) && settings.showResults && (\r\n                    <div className=\"option-stats\">\r\n                      <span className=\"vote-count\">{option.votes}</span>\r\n                      <span className=\"percentage\">{percentage}%</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {(hasVoted || settings.liveMode) && settings.showResults && (\r\n                  <div className=\"vote-bar\">\r\n                    <div \r\n                      className=\"vote-fill\"\r\n                      style={{ width: `${percentage}%` }}\r\n                    ></div>\r\n                  </div>\r\n                )}\r\n                \r\n                {isUserVote && (\r\n                  <div className=\"user-vote-indicator\">âœ“</div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {hasVoted && (\r\n          <div className=\"vote-feedback\">\r\n            <p>Thanks for voting! ðŸŽ‰</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (presentationMode) {\r\n    // Full-screen presentation mode\r\n    return (\r\n      <div className=\"poll-viewer presentation-mode\">\r\n        {activePoll ? (\r\n          <div className=\"presentation-content\">\r\n            {renderPoll(activePoll)}\r\n          </div>\r\n        ) : (\r\n          <div className=\"presentation-placeholder\">\r\n            <h1>No poll selected</h1>\r\n            <p>Select a poll to start the presentation</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"poll-viewer\">\r\n      <div className=\"poll-viewer-header\">\r\n        <h1>Poll Viewer</h1>\r\n        <div className=\"poll-selector\">\r\n          <select \r\n            value={activePoll?._id || ''} \r\n            onChange={(e) => {\r\n              const poll = polls.find(p => p._id === e.target.value);\r\n              onPollSelect(poll);\r\n            }}\r\n            className=\"poll-select\"\r\n          >\r\n            <option value=\"\">Select a poll...</option>\r\n            {polls.map(poll => (\r\n              <option key={poll._id} value={poll._id}>\r\n                {extractPlainFromMaybeJson(poll.question)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"poll-viewer-content\">\r\n        {activePoll ? (\r\n          renderPoll(activePoll)\r\n        ) : (\r\n          <div className=\"no-poll-selected\">\r\n            <h2>No poll selected</h2>\r\n            <p>Choose a poll from the dropdown above to start voting</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {polls.length > 0 && (\r\n        <div className=\"poll-list-mini\">\r\n          <h3>All Polls</h3>\r\n          <div className=\"mini-poll-list\">\r\n            {polls.map(poll => (\r\n              <div\r\n                key={poll._id}\r\n                className={`mini-poll-item ${activePoll?._id === poll._id ? 'active' : ''}`}\r\n                onClick={() => onPollSelect(poll)}\r\n              >\r\n                <span className=\"mini-poll-title\">\r\n                  {extractPlainFromMaybeJson(poll.question)}\r\n                </span>\r\n                <span className=\"mini-poll-votes\">\r\n                  {poll.totalVotes} votes\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}