{"ast":null,"code":"import { io } from 'socket.io-client';\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n  }\n  connect() {\n    if (this.socket) return;\n    this.socket = io('http://localhost:5000', {\n      transports: ['websocket', 'polling']\n    });\n    this.socket.on('connect', () => {\n      console.log('Connected to WebSocket server');\n      this.isConnected = true;\n    });\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from WebSocket server');\n      this.isConnected = false;\n    });\n    this.socket.on('connect_error', error => {\n      console.error('WebSocket connection error:', error);\n    });\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n    }\n  }\n  subscribeToPoll(pollId) {\n    if (this.socket && pollId) {\n      this.socket.emit('subscribe', {\n        pollId\n      });\n    }\n  }\n  unsubscribeFromPoll(pollId) {\n    if (this.socket && pollId) {\n      this.socket.emit('unsubscribe', {\n        pollId\n      });\n    }\n  }\n  broadcastPollCreated(poll) {\n    if (this.socket) {\n      this.socket.emit('poll_created', poll);\n    }\n  }\n  broadcastPollUpdated(poll) {\n    if (this.socket) {\n      this.socket.emit('poll_updated', poll);\n    }\n  }\n  broadcastPollDeleted(pollId) {\n    if (this.socket) {\n      this.socket.emit('poll_deleted', {\n        pollId\n      });\n    }\n  }\n  broadcastVote(pollId, optionId, updatedPoll) {\n    if (this.socket) {\n      this.socket.emit('vote_cast', {\n        pollId,\n        optionId,\n        updatedPoll\n      });\n    }\n  }\n  onPollCreated(callback) {\n    if (this.socket) {\n      this.socket.on('poll_created', callback);\n    }\n  }\n  onPollUpdated(callback) {\n    if (this.socket) {\n      this.socket.on('poll_updated', callback);\n    }\n  }\n  onPollDeleted(callback) {\n    if (this.socket) {\n      this.socket.on('poll_deleted', callback);\n    }\n  }\n  onVoteUpdate(callback) {\n    if (this.socket) {\n      this.socket.on('vote_update', callback);\n    }\n  }\n  off(event) {\n    if (this.socket) {\n      this.socket.off(event);\n    }\n  }\n}\nexport default new SocketService();","map":{"version":3,"names":["io","SocketService","constructor","socket","isConnected","connect","transports","on","console","log","error","disconnect","subscribeToPoll","pollId","emit","unsubscribeFromPoll","broadcastPollCreated","poll","broadcastPollUpdated","broadcastPollDeleted","broadcastVote","optionId","updatedPoll","onPollCreated","callback","onPollUpdated","onPollDeleted","onVoteUpdate","off","event"],"sources":["D:/polleditor-server/poll-editor/src/socket/socket.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nclass SocketService {\r\n  constructor() {\r\n    this.socket = null;\r\n    this.isConnected = false;\r\n  }\r\n\r\n  connect() {\r\n    if (this.socket) return;\r\n\r\n    this.socket = io('http://localhost:5000', {\r\n      transports: ['websocket', 'polling'],\r\n    });\r\n\r\n    this.socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server');\r\n      this.isConnected = true;\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      console.log('Disconnected from WebSocket server');\r\n      this.isConnected = false;\r\n    });\r\n\r\n    this.socket.on('connect_error', (error) => {\r\n      console.error('WebSocket connection error:', error);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n      this.isConnected = false;\r\n    }\r\n  }\r\n\r\n  subscribeToPoll(pollId) {\r\n    if (this.socket && pollId) {\r\n      this.socket.emit('subscribe', { pollId });\r\n    }\r\n  }\r\n\r\n  unsubscribeFromPoll(pollId) {\r\n    if (this.socket && pollId) {\r\n      this.socket.emit('unsubscribe', { pollId });\r\n    }\r\n  }\r\n\r\n  broadcastPollCreated(poll) {\r\n    if (this.socket) {\r\n      this.socket.emit('poll_created', poll);\r\n    }\r\n  }\r\n\r\n  broadcastPollUpdated(poll) {\r\n    if (this.socket) {\r\n      this.socket.emit('poll_updated', poll);\r\n    }\r\n  }\r\n\r\n  broadcastPollDeleted(pollId) {\r\n    if (this.socket) {\r\n      this.socket.emit('poll_deleted', { pollId });\r\n    }\r\n  }\r\n\r\n  broadcastVote(pollId, optionId, updatedPoll) {\r\n    if (this.socket) {\r\n      this.socket.emit('vote_cast', { pollId, optionId, updatedPoll });\r\n    }\r\n  }\r\n\r\n  onPollCreated(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('poll_created', callback);\r\n    }\r\n  }\r\n\r\n  onPollUpdated(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('poll_updated', callback);\r\n    }\r\n  }\r\n\r\n  onPollDeleted(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('poll_deleted', callback);\r\n    }\r\n  }\r\n\r\n  onVoteUpdate(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('vote_update', callback);\r\n    }\r\n  }\r\n\r\n  off(event) {\r\n    if (this.socket) {\r\n      this.socket.off(event);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new SocketService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}