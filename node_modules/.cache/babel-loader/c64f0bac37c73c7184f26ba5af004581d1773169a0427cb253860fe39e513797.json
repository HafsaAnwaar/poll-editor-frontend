{"ast":null,"code":"var _jsxFileName = \"D:\\\\server\\\\poll-editor\\\\src\\\\components\\\\PollList.jsx\";\nimport React from 'react';\nimport './PollList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollList = ({\n  polls,\n  onPollSelect,\n  selectedPoll\n}) => {\n  // const formatDate = (dateString) => {\n  //   return new Date(dateString).toLocaleDateString();\n  // };\n\n  const truncateText = (text, maxLength = 50) => {\n    if (!text) return '';\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n  const extractPlainFromMaybeJson = str => {\n    if (!str) return '';\n    const trimmed = String(str).trim();\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\n      try {\n        var _json$root;\n        const json = JSON.parse(trimmed);\n        const children = (json === null || json === void 0 ? void 0 : (_json$root = json.root) === null || _json$root === void 0 ? void 0 : _json$root.children) || [];\n        const text = children.map(node => Array.isArray(node.children) ? node.children.map(c => c.text || '').join('') : '').join(' ').trim();\n        return text || trimmed;\n      } catch (_) {\n        return trimmed;\n      }\n    }\n    return trimmed;\n  };\n  const getPollPreview = poll => {\n    const plain = extractPlainFromMaybeJson(poll.question);\n    if (plain) return truncateText(plain, 60);\n    if (poll.questionHtml) return truncateText(poll.questionHtml.replace(/<[^>]+>/g, ''), 60);\n    return 'No preview available';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Polls (\", polls.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => onPollSelect(null),\n        children: \"+ New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list-content\",\n      children: polls.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No polls yet. Create your first poll!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `poll-item ${(selectedPoll === null || selectedPoll === void 0 ? void 0 : selectedPoll._id) === poll._id ? 'selected' : ''}`,\n        onClick: () => onPollSelect(poll),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-item-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: getPollPreview(poll)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status ${poll.isActive ? 'active' : 'inactive'}`,\n            children: poll.isActive ? 'Active' : 'Inactive'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"poll-options\",\n            children: [poll.options.length, \" option\", poll.options.length !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"poll-votes\",\n            children: [poll.totalVotes, \" vote\", poll.totalVotes !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"poll-date\",\n            children: formatDate(poll.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, poll._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = PollList;\nexport default PollList;\nvar _c;\n$RefreshReg$(_c, \"PollList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PollList","polls","onPollSelect","selectedPoll","truncateText","text","maxLength","length","substring","extractPlainFromMaybeJson","str","trimmed","String","trim","startsWith","includes","_json$root","json","JSON","parse","children","root","map","node","Array","isArray","c","join","_","getPollPreview","poll","plain","question","questionHtml","replace","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_id","isActive","options","totalVotes","formatDate","createdAt","_c","$RefreshReg$"],"sources":["D:/server/poll-editor/src/components/PollList.jsx"],"sourcesContent":["import React from 'react';\r\nimport './PollList.css';\r\n\r\nconst PollList = ({ polls, onPollSelect, selectedPoll }) => {\r\n  // const formatDate = (dateString) => {\r\n  //   return new Date(dateString).toLocaleDateString();\r\n  // };\r\n\r\n  const truncateText = (text, maxLength = 50) => {\r\n    if (!text) return '';\r\n    if (text.length <= maxLength) return text;\r\n    return text.substring(0, maxLength) + '...';\r\n  };\r\n\r\n  const extractPlainFromMaybeJson = (str) => {\r\n    if (!str) return '';\r\n    const trimmed = String(str).trim();\r\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\r\n      try {\r\n        const json = JSON.parse(trimmed);\r\n        const children = json?.root?.children || [];\r\n        const text = children\r\n          .map((node) => Array.isArray(node.children) ? node.children.map((c) => c.text || '').join('') : '')\r\n          .join(' ')\r\n          .trim();\r\n        return text || trimmed;\r\n      } catch (_) {\r\n        return trimmed;\r\n      }\r\n    }\r\n    return trimmed;\r\n  };\r\n\r\n  const getPollPreview = (poll) => {\r\n    const plain = extractPlainFromMaybeJson(poll.question);\r\n    if (plain) return truncateText(plain, 60);\r\n    if (poll.questionHtml) return truncateText(poll.questionHtml.replace(/<[^>]+>/g, ''), 60);\r\n    return 'No preview available';\r\n  };\r\n\r\n  return (\r\n    <div className=\"poll-list\">\r\n      <div className=\"poll-list-header\">\r\n        <h2>Polls ({polls.length})</h2>\r\n        <button \r\n          className=\"btn btn-success\"\r\n          onClick={() => onPollSelect(null)}\r\n        >\r\n          + New Poll\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"poll-list-content\">\r\n        {polls.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <p>No polls yet. Create your first poll!</p>\r\n          </div>\r\n        ) : (\r\n          polls.map((poll) => (\r\n            <div\r\n              key={poll._id}\r\n              className={`poll-item ${selectedPoll?._id === poll._id ? 'selected' : ''}`}\r\n              onClick={() => onPollSelect(poll)}\r\n            >\r\n              <div className=\"poll-item-header\">\r\n                <h3>{getPollPreview(poll)}</h3>\r\n                <span className={`status ${poll.isActive ? 'active' : 'inactive'}`}>\r\n                  {poll.isActive ? 'Active' : 'Inactive'}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"poll-item-details\">\r\n                <p className=\"poll-options\">\r\n                  {poll.options.length} option{poll.options.length !== 1 ? 's' : ''}\r\n                </p>\r\n                <p className=\"poll-votes\">\r\n                  {poll.totalVotes} vote{poll.totalVotes !== 1 ? 's' : ''}\r\n                </p>\r\n                <p className=\"poll-date\">\r\n                  {formatDate(poll.createdAt)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}