{"ast":null,"code":"var _jsxFileName = \"D:\\\\polleditor-server\\\\polleditor-server\\\\poll-editor\\\\src\\\\components\\\\PollList.jsx\";\nimport React from 'react';\nimport DOMPurify from 'dompurify';\nimport './PollList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollList = ({\n  polls,\n  onPollSelect,\n  selectedPoll\n}) => {\n  const truncateText = (text, maxLength = 50) => {\n    if (!text) return '';\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n  const extractPlainFromMaybeJson = str => {\n    if (!str) return '';\n    const trimmed = String(str).trim();\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\n      try {\n        var _json$root;\n        const json = JSON.parse(trimmed);\n        const children = (json === null || json === void 0 ? void 0 : (_json$root = json.root) === null || _json$root === void 0 ? void 0 : _json$root.children) || [];\n        const text = children.map(node => Array.isArray(node.children) ? node.children.map(c => c.text || '').join('') : '').join(' ').trim();\n        return text || trimmed;\n      } catch (_) {\n        return trimmed;\n      }\n    }\n    return trimmed;\n  };\n  const getPollPreview = poll => {\n    // Prefer rich HTML if available\n    if (poll.questionHtml) {\n      const clean = DOMPurify.sanitize(poll.questionHtml);\n      return {\n        type: 'html',\n        value: clean\n      };\n    }\n    const plain = extractPlainFromMaybeJson(poll.question);\n    if (plain) return {\n      type: 'text',\n      value: truncateText(plain, 60)\n    };\n    return {\n      type: 'text',\n      value: 'No preview available'\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Polls (\", polls.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => onPollSelect(null),\n        children: \"+ New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list-content\",\n      children: polls.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No polls yet. Create your first poll!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `poll-item ${(selectedPoll === null || selectedPoll === void 0 ? void 0 : selectedPoll._id) === poll._id ? 'selected' : ''}`,\n        onClick: () => onPollSelect(poll),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-item-header\",\n          children: [(() => {\n            const preview = getPollPreview(poll);\n            if (preview.type === 'html') {\n              return /*#__PURE__*/_jsxDEV(\"h3\", {\n                dangerouslySetInnerHTML: {\n                  __html: preview.value\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: preview.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 27\n            }, this);\n          })(), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-statuses\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status ${poll.isActive ? 'active' : 'inactive'}`,\n              children: poll.isActive ? 'Active' : 'Inactive'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status ${poll.allowMultipleVotes ? 'multiple-answer' : 'single-answer'}`,\n              children: poll.allowMultipleVotes ? 'Multiple Answer' : 'Single Answer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"poll-options\",\n            children: [poll.options.length, \" option\", poll.options.length !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"poll-votes\",\n            children: [poll.totalVotes, \" vote\", poll.totalVotes !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, poll._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = PollList;\nexport default PollList;\nvar _c;\n$RefreshReg$(_c, \"PollList\");","map":{"version":3,"names":["React","DOMPurify","jsxDEV","_jsxDEV","PollList","polls","onPollSelect","selectedPoll","truncateText","text","maxLength","length","substring","extractPlainFromMaybeJson","str","trimmed","String","trim","startsWith","includes","_json$root","json","JSON","parse","children","root","map","node","Array","isArray","c","join","_","getPollPreview","poll","questionHtml","clean","sanitize","type","value","plain","question","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_id","preview","dangerouslySetInnerHTML","__html","isActive","allowMultipleVotes","options","totalVotes","_c","$RefreshReg$"],"sources":["D:/polleditor-server/polleditor-server/poll-editor/src/components/PollList.jsx"],"sourcesContent":["import React from 'react';\r\nimport DOMPurify from 'dompurify';\r\nimport './PollList.css';\r\n\r\nconst PollList = ({ polls, onPollSelect, selectedPoll }) => {\r\n\r\n  const truncateText = (text, maxLength = 50) => {\r\n    if (!text) return '';\r\n    if (text.length <= maxLength) return text;\r\n    return text.substring(0, maxLength) + '...';\r\n  };\r\n\r\n  const extractPlainFromMaybeJson = (str) => {\r\n    if (!str) return '';\r\n    const trimmed = String(str).trim();\r\n    if (trimmed.startsWith('{') && trimmed.includes('\"root\"')) {\r\n      try {\r\n        const json = JSON.parse(trimmed);\r\n        const children = json?.root?.children || [];\r\n        const text = children\r\n          .map((node) => Array.isArray(node.children) ? node.children.map((c) => c.text || '').join('') : '')\r\n          .join(' ')\r\n          .trim();\r\n        return text || trimmed;\r\n      } catch (_) {\r\n        return trimmed;\r\n      }\r\n    }\r\n    return trimmed;\r\n  };\r\n\r\n  const getPollPreview = (poll) => {\r\n    // Prefer rich HTML if available\r\n    if (poll.questionHtml) {\r\n      const clean = DOMPurify.sanitize(poll.questionHtml);\r\n      return { type: 'html', value: clean };\r\n    }\r\n    const plain = extractPlainFromMaybeJson(poll.question);\r\n    if (plain) return { type: 'text', value: truncateText(plain, 60) };\r\n    return { type: 'text', value: 'No preview available' };\r\n  };\r\n\r\n  return (\r\n    <div className=\"poll-list\">\r\n      <div className=\"poll-list-header\">\r\n        <h2>Polls ({polls.length})</h2>\r\n        <button \r\n          className=\"btn btn-success\"\r\n          onClick={() => onPollSelect(null)}\r\n        >\r\n          + New Poll\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"poll-list-content\">\r\n        {polls.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <p>No polls yet. Create your first poll!</p>\r\n          </div>\r\n        ) : (\r\n          polls.map((poll) => (\r\n            <div\r\n              key={poll._id}\r\n              className={`poll-item ${selectedPoll?._id === poll._id ? 'selected' : ''}`}\r\n              onClick={() => onPollSelect(poll)}\r\n            >\r\n              <div className=\"poll-item-header\">\r\n                {(() => {\r\n                  const preview = getPollPreview(poll);\r\n                  if (preview.type === 'html') {\r\n                    return (\r\n                      <h3 dangerouslySetInnerHTML={{ __html: preview.value }} />\r\n                    );\r\n                  }\r\n                  return (<h3>{preview.value}</h3>);\r\n                })()}\r\n                <div className=\"poll-statuses\">\r\n                  <span className={`status ${poll.isActive ? 'active' : 'inactive'}`}>\r\n                    {poll.isActive ? 'Active' : 'Inactive'}\r\n                  </span>\r\n                  <span className={`status ${poll.allowMultipleVotes ? 'multiple-answer' : 'single-answer'}`}>\r\n                    {poll.allowMultipleVotes ? 'Multiple Answer' : 'Single Answer'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"poll-item-details\">\r\n                <p className=\"poll-options\">\r\n                  {poll.options.length} option{poll.options.length !== 1 ? 's' : ''}\r\n                </p>\r\n                <p className=\"poll-votes\">\r\n                  {poll.totalVotes} vote{poll.totalVotes !== 1 ? 's' : ''}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}