{"ast":null,"code":"var _jsxFileName = \"D:\\\\polleditor-server\\\\poll-editor\\\\src\\\\context\\\\PollContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollContext = /*#__PURE__*/createContext();\nexport const usePollContext = () => {\n  _s();\n  const context = useContext(PollContext);\n  if (!context) {\n    throw new Error('usePollContext must be used within a PollProvider');\n  }\n  return context;\n};\n_s(usePollContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const PollProvider = ({\n  children\n}) => {\n  _s2();\n  const getInitialTheme = () => {\n    try {\n      const saved = localStorage.getItem('app_theme');\n      if (saved === 'light' || saved === 'dark') return saved;\n    } catch {}\n    return 'light';\n  };\n  const [settings, setSettings] = useState({\n    showResults: true,\n    theme: getInitialTheme(),\n    autoSave: true,\n    liveMode: false,\n    showRichText: false,\n    displayMode: 'editor' // 'editor' | 'viewer' | 'presentation'\n  });\n  useEffect(() => {\n    try {\n      localStorage.setItem('app_theme', settings.theme);\n    } catch {}\n  }, [settings.theme]);\n  const updateSettings = newSettings => {\n    setSettings(prev => ({\n      ...prev,\n      ...newSettings\n    }));\n  };\n  const toggleSetting = key => {\n    setSettings(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n  const value = {\n    settings,\n    updateSettings,\n    toggleSetting\n  };\n  return /*#__PURE__*/_jsxDEV(PollContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s2(PollProvider, \"ZQmhCr1IuxdrvBqHqNDy+vA/gFw=\");\n_c = PollProvider;\nvar _c;\n$RefreshReg$(_c, \"PollProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","PollContext","usePollContext","_s","context","Error","PollProvider","children","_s2","getInitialTheme","saved","localStorage","getItem","settings","setSettings","showResults","theme","autoSave","liveMode","showRichText","displayMode","setItem","updateSettings","newSettings","prev","toggleSetting","key","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/polleditor-server/poll-editor/src/context/PollContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst PollContext = createContext();\n\nexport const usePollContext = () => {\n  const context = useContext(PollContext);\n  if (!context) {\n    throw new Error('usePollContext must be used within a PollProvider');\n  }\n  return context;\n};\n\nexport const PollProvider = ({ children }) => {\n  const getInitialTheme = () => {\n    try {\n      const saved = localStorage.getItem('app_theme');\n      if (saved === 'light' || saved === 'dark') return saved;\n    } catch {}\n    return 'light';\n  };\n\n  const [settings, setSettings] = useState({\n    showResults: true,\n    theme: getInitialTheme(),\n    autoSave: true,\n    liveMode: false,\n    showRichText: false,\n    displayMode: 'editor', // 'editor' | 'viewer' | 'presentation'\n  });\n\n  useEffect(() => {\n    try {\n      localStorage.setItem('app_theme', settings.theme);\n    } catch {}\n  }, [settings.theme]);\n\n  const updateSettings = (newSettings) => {\n    setSettings(prev => ({ ...prev, ...newSettings }));\n  };\n\n  const toggleSetting = (key) => {\n    setSettings(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const value = {\n    settings,\n    updateSettings,\n    toggleSetting,\n  };\n\n  return (\n    <PollContext.Provider value={value}>\n      {children}\n    </PollContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,cAAc;AAQ3B,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAIF,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,MAAM,EAAE,OAAOA,KAAK;IACzD,CAAC,CAAC,MAAM,CAAC;IACT,OAAO,OAAO;EAChB,CAAC;EAED,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,WAAW,EAAE,IAAI;IACjBC,KAAK,EAAEP,eAAe,CAAC,CAAC;IACxBQ,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE,KAAK;IACfC,YAAY,EAAE,KAAK;IACnBC,WAAW,EAAE,QAAQ,CAAE;EACzB,CAAC,CAAC;EAEFvB,SAAS,CAAC,MAAM;IACd,IAAI;MACFc,YAAY,CAACU,OAAO,CAAC,WAAW,EAAER,QAAQ,CAACG,KAAK,CAAC;IACnD,CAAC,CAAC,MAAM,CAAC;EACX,CAAC,EAAE,CAACH,QAAQ,CAACG,KAAK,CAAC,CAAC;EAEpB,MAAMM,cAAc,GAAIC,WAAW,IAAK;IACtCT,WAAW,CAACU,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,GAAGD;IAAY,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,MAAME,aAAa,GAAIC,GAAG,IAAK;IAC7BZ,WAAW,CAACU,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACE,GAAG,GAAG,CAACF,IAAI,CAACE,GAAG;IAAE,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAMC,KAAK,GAAG;IACZd,QAAQ;IACRS,cAAc;IACdG;EACF,CAAC;EAED,oBACEzB,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAChCA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,GAAA,CA3CWF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}