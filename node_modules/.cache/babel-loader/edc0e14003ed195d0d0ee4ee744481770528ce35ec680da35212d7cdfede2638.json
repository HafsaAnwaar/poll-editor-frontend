{"ast":null,"code":"var _jsxFileName = \"D:\\\\server\\\\poll-editor\\\\src\\\\components\\\\PollViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { usePollContext } from '../context/PollContext';\nimport { votePoll, incrementVoteOptimistic } from '../redux/pollsSlice';\nimport socketService from '../socket/socket';\nimport './PollViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollViewer = ({\n  polls,\n  selectedPoll,\n  onPollSelect,\n  presentationMode = false\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    settings\n  } = usePollContext();\n  const {\n    currentPoll\n  } = useSelector(state => state.polls);\n  const [votedPolls, setVotedPolls] = useState(new Set());\n  const [localVotes, setLocalVotes] = useState({});\n\n  // Use selectedPoll or currentPoll\n  const activePoll = selectedPoll || currentPoll;\n  useEffect(() => {\n    // Listen for vote updates from WebSocket\n    socketService.onVoteUpdate(({\n      pollId,\n      updatedPoll\n    }) => {\n      if (updatedPoll) {\n        dispatch({\n          type: 'polls/updatePollInStore',\n          payload: updatedPoll\n        });\n      }\n    });\n    return () => {\n      socketService.off('vote_update');\n    };\n  }, [dispatch]);\n  const renderQuestion = poll => {\n    if (poll.questionHtml) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        dangerouslySetInnerHTML: {\n          __html: poll.questionHtml\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: poll.question || 'Untitled Poll'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  };\n  const handleVote = async (pollId, optionId) => {\n    if (votedPolls.has(pollId)) {\n      return; // Already voted\n    }\n\n    // Mark as voted immediately and record selection\n    setVotedPolls(prev => new Set([...prev, pollId]));\n    setLocalVotes(prev => ({\n      ...prev,\n      [pollId]: optionId\n    }));\n\n    // Optimistic UI update\n    dispatch(incrementVoteOptimistic({\n      pollId,\n      optionId\n    }));\n    try {\n      const result = await dispatch(votePoll({\n        pollId,\n        optionId\n      })).unwrap();\n      // Broadcast vote via WebSocket\n      socketService.broadcastVote(pollId, optionId, result);\n    } catch (error) {\n      console.error('Vote failed:', error);\n    }\n  };\n  const calculatePercentage = (votes, totalVotes) => {\n    if (totalVotes === 0) return 0;\n    return Math.round(votes / totalVotes * 100);\n  };\n  const renderPoll = poll => {\n    const hasVoted = votedPolls.has(poll._id);\n    const userVote = localVotes[poll._id];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-question\",\n        children: [renderQuestion(poll), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-status\",\n            children: poll.isActive ? 'ðŸŸ¢ Active' : 'ðŸ”´ Inactive'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"poll-votes\",\n            children: [poll.totalVotes, \" vote\", poll.totalVotes !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-options\",\n        children: poll.options.map(option => {\n          const percentage = calculatePercentage(option.votes, poll.totalVotes);\n          const isUserVote = userVote === option._id;\n          const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''}`,\n            onClick: () => !hasVoted && poll.isActive && handleVote(poll._id, option._id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-text\",\n                children: option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), (hasVoted || settings.liveMode) && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"vote-count\",\n                  children: option.votes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"percentage\",\n                  children: [percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), (hasVoted || settings.liveMode) && settings.showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vote-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vote-fill\",\n                style: {\n                  width: `${percentage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), isUserVote && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-vote-indicator\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, option._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-feedback\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thanks for voting! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, poll._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  };\n  if (presentationMode) {\n    // Full-screen presentation mode\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer presentation-mode\",\n      children: activePoll ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-content\",\n        children: renderPoll(activePoll)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"presentation-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a poll to start the presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Poll Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) || '',\n          onChange: e => {\n            const poll = polls.find(p => p._id === e.target.value);\n            onPollSelect(poll);\n          },\n          className: \"poll-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a poll...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), polls.map(poll => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: poll._id,\n            children: poll.question || 'Untitled Poll'\n          }, poll._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-viewer-content\",\n      children: activePoll ? renderPoll(activePoll) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-poll-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No poll selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a poll from the dropdown above to start voting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), polls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list-mini\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-poll-list\",\n        children: polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mini-poll-item ${(activePoll === null || activePoll === void 0 ? void 0 : activePoll._id) === poll._id ? 'active' : ''}`,\n          onClick: () => onPollSelect(poll),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-title\",\n            children: poll.question || 'Untitled Poll'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini-poll-votes\",\n            children: [poll.totalVotes, \" votes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)]\n        }, poll._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(PollViewer, \"u+JX2kqjEnjKqwvEhewxIkjztkM=\", false, function () {\n  return [useDispatch, usePollContext, useSelector];\n});\n_c = PollViewer;\nexport default PollViewer;\nvar _c;\n$RefreshReg$(_c, \"PollViewer\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","usePollContext","votePoll","incrementVoteOptimistic","socketService","jsxDEV","_jsxDEV","PollViewer","polls","selectedPoll","onPollSelect","presentationMode","_s","dispatch","settings","currentPoll","state","votedPolls","setVotedPolls","Set","localVotes","setLocalVotes","activePoll","onVoteUpdate","pollId","updatedPoll","type","payload","off","renderQuestion","poll","questionHtml","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","children","question","handleVote","optionId","has","prev","result","unwrap","broadcastVote","error","console","calculatePercentage","votes","totalVotes","Math","round","renderPoll","hasVoted","_id","userVote","className","isActive","options","map","option","percentage","isUserVote","isWinning","max","o","onClick","text","liveMode","showResults","style","width","value","onChange","e","find","p","target","length","_c","$RefreshReg$"],"sources":["D:/server/poll-editor/src/components/PollViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { usePollContext } from '../context/PollContext';\r\nimport { votePoll, incrementVoteOptimistic } from '../redux/pollsSlice';\r\nimport socketService from '../socket/socket';\r\nimport './PollViewer.css';\r\n\r\nconst PollViewer = ({ polls, selectedPoll, onPollSelect, presentationMode = false }) => {\r\n  const dispatch = useDispatch();\r\n  const { settings } = usePollContext();\r\n  const { currentPoll } = useSelector(state => state.polls);\r\n  \r\n  const [votedPolls, setVotedPolls] = useState(new Set());\r\n  const [localVotes, setLocalVotes] = useState({});\r\n\r\n  // Use selectedPoll or currentPoll\r\n  const activePoll = selectedPoll || currentPoll;\r\n\r\n  useEffect(() => {\r\n    // Listen for vote updates from WebSocket\r\n    socketService.onVoteUpdate(({ pollId, updatedPoll }) => {\r\n      if (updatedPoll) {\r\n        dispatch({ type: 'polls/updatePollInStore', payload: updatedPoll });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socketService.off('vote_update');\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const renderQuestion = (poll) => {\r\n    if (poll.questionHtml) {\r\n      return <h2 dangerouslySetInnerHTML={{ __html: poll.questionHtml }} />;\r\n    }\r\n    return <h2>{poll.question || 'Untitled Poll'}</h2>;\r\n  };\r\n\r\n  const handleVote = async (pollId, optionId) => {\r\n    if (votedPolls.has(pollId)) {\r\n      return; // Already voted\r\n    }\r\n\r\n    // Mark as voted immediately and record selection\r\n    setVotedPolls(prev => new Set([...prev, pollId]));\r\n    setLocalVotes(prev => ({ ...prev, [pollId]: optionId }));\r\n\r\n    // Optimistic UI update\r\n    dispatch(incrementVoteOptimistic({ pollId, optionId }));\r\n\r\n    try {\r\n      const result = await dispatch(votePoll({ pollId, optionId })).unwrap();\r\n      // Broadcast vote via WebSocket\r\n      socketService.broadcastVote(pollId, optionId, result);\r\n    } catch (error) {\r\n      console.error('Vote failed:', error);\r\n    }\r\n  };\r\n\r\n  const calculatePercentage = (votes, totalVotes) => {\r\n    if (totalVotes === 0) return 0;\r\n    return Math.round((votes / totalVotes) * 100);\r\n  };\r\n\r\n  const renderPoll = (poll) => {\r\n    const hasVoted = votedPolls.has(poll._id);\r\n    const userVote = localVotes[poll._id];\r\n\r\n    return (\r\n      <div key={poll._id} className=\"poll-viewer-card\">\r\n        <div className=\"poll-question\">\r\n          {renderQuestion(poll)}\r\n          <div className=\"poll-meta\">\r\n            <span className=\"poll-status\">\r\n              {poll.isActive ? 'ðŸŸ¢ Active' : 'ðŸ”´ Inactive'}\r\n            </span>\r\n            <span className=\"poll-votes\">\r\n              {poll.totalVotes} vote{poll.totalVotes !== 1 ? 's' : ''}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"poll-options\">\r\n          {poll.options.map((option) => {\r\n            const percentage = calculatePercentage(option.votes, poll.totalVotes);\r\n            const isUserVote = userVote === option._id;\r\n            const isWinning = poll.totalVotes > 0 && option.votes === Math.max(...poll.options.map(o => o.votes));\r\n\r\n            return (\r\n              <div\r\n                key={option._id}\r\n                className={`poll-option ${hasVoted ? 'voted' : ''} ${isUserVote ? 'user-vote' : ''} ${isWinning ? 'winning' : ''}`}\r\n                onClick={() => !hasVoted && poll.isActive && handleVote(poll._id, option._id)}\r\n              >\r\n                <div className=\"option-content\">\r\n                  <div className=\"option-text\">{option.text}</div>\r\n                  {(hasVoted || settings.liveMode) && settings.showResults && (\r\n                    <div className=\"option-stats\">\r\n                      <span className=\"vote-count\">{option.votes}</span>\r\n                      <span className=\"percentage\">{percentage}%</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {(hasVoted || settings.liveMode) && settings.showResults && (\r\n                  <div className=\"vote-bar\">\r\n                    <div \r\n                      className=\"vote-fill\"\r\n                      style={{ width: `${percentage}%` }}\r\n                    ></div>\r\n                  </div>\r\n                )}\r\n                \r\n                {isUserVote && (\r\n                  <div className=\"user-vote-indicator\">âœ“</div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {hasVoted && (\r\n          <div className=\"vote-feedback\">\r\n            <p>Thanks for voting! ðŸŽ‰</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (presentationMode) {\r\n    // Full-screen presentation mode\r\n    return (\r\n      <div className=\"poll-viewer presentation-mode\">\r\n        {activePoll ? (\r\n          <div className=\"presentation-content\">\r\n            {renderPoll(activePoll)}\r\n          </div>\r\n        ) : (\r\n          <div className=\"presentation-placeholder\">\r\n            <h1>No poll selected</h1>\r\n            <p>Select a poll to start the presentation</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"poll-viewer\">\r\n      <div className=\"poll-viewer-header\">\r\n        <h1>Poll Viewer</h1>\r\n        <div className=\"poll-selector\">\r\n          <select \r\n            value={activePoll?._id || ''} \r\n            onChange={(e) => {\r\n              const poll = polls.find(p => p._id === e.target.value);\r\n              onPollSelect(poll);\r\n            }}\r\n            className=\"poll-select\"\r\n          >\r\n            <option value=\"\">Select a poll...</option>\r\n            {polls.map(poll => (\r\n              <option key={poll._id} value={poll._id}>\r\n                {poll.question || 'Untitled Poll'}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"poll-viewer-content\">\r\n        {activePoll ? (\r\n          renderPoll(activePoll)\r\n        ) : (\r\n          <div className=\"no-poll-selected\">\r\n            <h2>No poll selected</h2>\r\n            <p>Choose a poll from the dropdown above to start voting</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {polls.length > 0 && (\r\n        <div className=\"poll-list-mini\">\r\n          <h3>All Polls</h3>\r\n          <div className=\"mini-poll-list\">\r\n            {polls.map(poll => (\r\n              <div\r\n                key={poll._id}\r\n                className={`mini-poll-item ${activePoll?._id === poll._id ? 'active' : ''}`}\r\n                onClick={() => onPollSelect(poll)}\r\n              >\r\n                <span className=\"mini-poll-title\">\r\n                  {poll.question || 'Untitled Poll'}\r\n                </span>\r\n                <span className=\"mini-poll-votes\">\r\n                  {poll.totalVotes} votes\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollViewer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,QAAQ,EAAEC,uBAAuB,QAAQ,qBAAqB;AACvE,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,YAAY;EAAEC,YAAY;EAAEC,gBAAgB,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACtF,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEe;EAAS,CAAC,GAAGb,cAAc,CAAC,CAAC;EACrC,MAAM;IAAEc;EAAY,CAAC,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACR,KAAK,CAAC;EAEzD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,IAAIsB,GAAG,CAAC,CAAC,CAAC;EACvD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMyB,UAAU,GAAGb,YAAY,IAAIM,WAAW;EAE9CjB,SAAS,CAAC,MAAM;IACd;IACAM,aAAa,CAACmB,YAAY,CAAC,CAAC;MAAEC,MAAM;MAAEC;IAAY,CAAC,KAAK;MACtD,IAAIA,WAAW,EAAE;QACfZ,QAAQ,CAAC;UAAEa,IAAI,EAAE,yBAAyB;UAAEC,OAAO,EAAEF;QAAY,CAAC,CAAC;MACrE;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXrB,aAAa,CAACwB,GAAG,CAAC,aAAa,CAAC;IAClC,CAAC;EACH,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEd,MAAMgB,cAAc,GAAIC,IAAI,IAAK;IAC/B,IAAIA,IAAI,CAACC,YAAY,EAAE;MACrB,oBAAOzB,OAAA;QAAI0B,uBAAuB,EAAE;UAAEC,MAAM,EAAEH,IAAI,CAACC;QAAa;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACvE;IACA,oBAAO/B,OAAA;MAAAgC,QAAA,EAAKR,IAAI,CAACS,QAAQ,IAAI;IAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpD,CAAC;EAED,MAAMG,UAAU,GAAG,MAAAA,CAAOhB,MAAM,EAAEiB,QAAQ,KAAK;IAC7C,IAAIxB,UAAU,CAACyB,GAAG,CAAClB,MAAM,CAAC,EAAE;MAC1B,OAAO,CAAC;IACV;;IAEA;IACAN,aAAa,CAACyB,IAAI,IAAI,IAAIxB,GAAG,CAAC,CAAC,GAAGwB,IAAI,EAAEnB,MAAM,CAAC,CAAC,CAAC;IACjDH,aAAa,CAACsB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACnB,MAAM,GAAGiB;IAAS,CAAC,CAAC,CAAC;;IAExD;IACA5B,QAAQ,CAACV,uBAAuB,CAAC;MAAEqB,MAAM;MAAEiB;IAAS,CAAC,CAAC,CAAC;IAEvD,IAAI;MACF,MAAMG,MAAM,GAAG,MAAM/B,QAAQ,CAACX,QAAQ,CAAC;QAAEsB,MAAM;QAAEiB;MAAS,CAAC,CAAC,CAAC,CAACI,MAAM,CAAC,CAAC;MACtE;MACAzC,aAAa,CAAC0C,aAAa,CAACtB,MAAM,EAAEiB,QAAQ,EAAEG,MAAM,CAAC;IACvD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;IACjD,IAAIA,UAAU,KAAK,CAAC,EAAE,OAAO,CAAC;IAC9B,OAAOC,IAAI,CAACC,KAAK,CAAEH,KAAK,GAAGC,UAAU,GAAI,GAAG,CAAC;EAC/C,CAAC;EAED,MAAMG,UAAU,GAAIxB,IAAI,IAAK;IAC3B,MAAMyB,QAAQ,GAAGtC,UAAU,CAACyB,GAAG,CAACZ,IAAI,CAAC0B,GAAG,CAAC;IACzC,MAAMC,QAAQ,GAAGrC,UAAU,CAACU,IAAI,CAAC0B,GAAG,CAAC;IAErC,oBACElD,OAAA;MAAoBoD,SAAS,EAAC,kBAAkB;MAAApB,QAAA,gBAC9ChC,OAAA;QAAKoD,SAAS,EAAC,eAAe;QAAApB,QAAA,GAC3BT,cAAc,CAACC,IAAI,CAAC,eACrBxB,OAAA;UAAKoD,SAAS,EAAC,WAAW;UAAApB,QAAA,gBACxBhC,OAAA;YAAMoD,SAAS,EAAC,aAAa;YAAApB,QAAA,EAC1BR,IAAI,CAAC6B,QAAQ,GAAG,WAAW,GAAG;UAAa;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACP/B,OAAA;YAAMoD,SAAS,EAAC,YAAY;YAAApB,QAAA,GACzBR,IAAI,CAACqB,UAAU,EAAC,OAAK,EAACrB,IAAI,CAACqB,UAAU,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN/B,OAAA;QAAKoD,SAAS,EAAC,cAAc;QAAApB,QAAA,EAC1BR,IAAI,CAAC8B,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;UAC5B,MAAMC,UAAU,GAAGd,mBAAmB,CAACa,MAAM,CAACZ,KAAK,EAAEpB,IAAI,CAACqB,UAAU,CAAC;UACrE,MAAMa,UAAU,GAAGP,QAAQ,KAAKK,MAAM,CAACN,GAAG;UAC1C,MAAMS,SAAS,GAAGnC,IAAI,CAACqB,UAAU,GAAG,CAAC,IAAIW,MAAM,CAACZ,KAAK,KAAKE,IAAI,CAACc,GAAG,CAAC,GAAGpC,IAAI,CAAC8B,OAAO,CAACC,GAAG,CAACM,CAAC,IAAIA,CAAC,CAACjB,KAAK,CAAC,CAAC;UAErG,oBACE5C,OAAA;YAEEoD,SAAS,EAAE,eAAeH,QAAQ,GAAG,OAAO,GAAG,EAAE,IAAIS,UAAU,GAAG,WAAW,GAAG,EAAE,IAAIC,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;YACnHG,OAAO,EAAEA,CAAA,KAAM,CAACb,QAAQ,IAAIzB,IAAI,CAAC6B,QAAQ,IAAInB,UAAU,CAACV,IAAI,CAAC0B,GAAG,EAAEM,MAAM,CAACN,GAAG,CAAE;YAAAlB,QAAA,gBAE9EhC,OAAA;cAAKoD,SAAS,EAAC,gBAAgB;cAAApB,QAAA,gBAC7BhC,OAAA;gBAAKoD,SAAS,EAAC,aAAa;gBAAApB,QAAA,EAAEwB,MAAM,CAACO;cAAI;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,EAC/C,CAACkB,QAAQ,IAAIzC,QAAQ,CAACwD,QAAQ,KAAKxD,QAAQ,CAACyD,WAAW,iBACtDjE,OAAA;gBAAKoD,SAAS,EAAC,cAAc;gBAAApB,QAAA,gBAC3BhC,OAAA;kBAAMoD,SAAS,EAAC,YAAY;kBAAApB,QAAA,EAAEwB,MAAM,CAACZ;gBAAK;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAClD/B,OAAA;kBAAMoD,SAAS,EAAC,YAAY;kBAAApB,QAAA,GAAEyB,UAAU,EAAC,GAAC;gBAAA;kBAAA7B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,EAEL,CAACkB,QAAQ,IAAIzC,QAAQ,CAACwD,QAAQ,KAAKxD,QAAQ,CAACyD,WAAW,iBACtDjE,OAAA;cAAKoD,SAAS,EAAC,UAAU;cAAApB,QAAA,eACvBhC,OAAA;gBACEoD,SAAS,EAAC,WAAW;gBACrBc,KAAK,EAAE;kBAAEC,KAAK,EAAE,GAAGV,UAAU;gBAAI;cAAE;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CACN,EAEA2B,UAAU,iBACT1D,OAAA;cAAKoD,SAAS,EAAC,qBAAqB;cAAApB,QAAA,EAAC;YAAC;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAC5C;UAAA,GAzBIyB,MAAM,CAACN,GAAG;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA0BZ,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAELkB,QAAQ,iBACPjD,OAAA;QAAKoD,SAAS,EAAC,eAAe;QAAApB,QAAA,eAC5BhC,OAAA;UAAAgC,QAAA,EAAG;QAAqB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACN;IAAA,GAxDOP,IAAI,CAAC0B,GAAG;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAyDb,CAAC;EAEV,CAAC;EAED,IAAI1B,gBAAgB,EAAE;IACpB;IACA,oBACEL,OAAA;MAAKoD,SAAS,EAAC,+BAA+B;MAAApB,QAAA,EAC3ChB,UAAU,gBACThB,OAAA;QAAKoD,SAAS,EAAC,sBAAsB;QAAApB,QAAA,EAClCgB,UAAU,CAAChC,UAAU;MAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,gBAEN/B,OAAA;QAAKoD,SAAS,EAAC,0BAA0B;QAAApB,QAAA,gBACvChC,OAAA;UAAAgC,QAAA,EAAI;QAAgB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB/B,OAAA;UAAAgC,QAAA,EAAG;QAAuC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;EAEA,oBACE/B,OAAA;IAAKoD,SAAS,EAAC,aAAa;IAAApB,QAAA,gBAC1BhC,OAAA;MAAKoD,SAAS,EAAC,oBAAoB;MAAApB,QAAA,gBACjChC,OAAA;QAAAgC,QAAA,EAAI;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpB/B,OAAA;QAAKoD,SAAS,EAAC,eAAe;QAAApB,QAAA,eAC5BhC,OAAA;UACEoE,KAAK,EAAE,CAAApD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEkC,GAAG,KAAI,EAAG;UAC7BmB,QAAQ,EAAGC,CAAC,IAAK;YACf,MAAM9C,IAAI,GAAGtB,KAAK,CAACqE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACtB,GAAG,KAAKoB,CAAC,CAACG,MAAM,CAACL,KAAK,CAAC;YACtDhE,YAAY,CAACoB,IAAI,CAAC;UACpB,CAAE;UACF4B,SAAS,EAAC,aAAa;UAAApB,QAAA,gBAEvBhC,OAAA;YAAQoE,KAAK,EAAC,EAAE;YAAApC,QAAA,EAAC;UAAgB;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACzC7B,KAAK,CAACqD,GAAG,CAAC/B,IAAI,iBACbxB,OAAA;YAAuBoE,KAAK,EAAE5C,IAAI,CAAC0B,GAAI;YAAAlB,QAAA,EACpCR,IAAI,CAACS,QAAQ,IAAI;UAAe,GADtBT,IAAI,CAAC0B,GAAG;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN/B,OAAA;MAAKoD,SAAS,EAAC,qBAAqB;MAAApB,QAAA,EACjChB,UAAU,GACTgC,UAAU,CAAChC,UAAU,CAAC,gBAEtBhB,OAAA;QAAKoD,SAAS,EAAC,kBAAkB;QAAApB,QAAA,gBAC/BhC,OAAA;UAAAgC,QAAA,EAAI;QAAgB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB/B,OAAA;UAAAgC,QAAA,EAAG;QAAqD;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAEL7B,KAAK,CAACwE,MAAM,GAAG,CAAC,iBACf1E,OAAA;MAAKoD,SAAS,EAAC,gBAAgB;MAAApB,QAAA,gBAC7BhC,OAAA;QAAAgC,QAAA,EAAI;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB/B,OAAA;QAAKoD,SAAS,EAAC,gBAAgB;QAAApB,QAAA,EAC5B9B,KAAK,CAACqD,GAAG,CAAC/B,IAAI,iBACbxB,OAAA;UAEEoD,SAAS,EAAE,kBAAkB,CAAApC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEkC,GAAG,MAAK1B,IAAI,CAAC0B,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC5EY,OAAO,EAAEA,CAAA,KAAM1D,YAAY,CAACoB,IAAI,CAAE;UAAAQ,QAAA,gBAElChC,OAAA;YAAMoD,SAAS,EAAC,iBAAiB;YAAApB,QAAA,EAC9BR,IAAI,CAACS,QAAQ,IAAI;UAAe;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACP/B,OAAA;YAAMoD,SAAS,EAAC,iBAAiB;YAAApB,QAAA,GAC9BR,IAAI,CAACqB,UAAU,EAAC,QACnB;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GATFP,IAAI,CAAC0B,GAAG;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CAtMIL,UAAU;EAAA,QACGR,WAAW,EACPE,cAAc,EACXD,WAAW;AAAA;AAAAiF,EAAA,GAH/B1E,UAAU;AAwMhB,eAAeA,UAAU;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}